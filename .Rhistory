}
# one-hot encoding
combtyid = as.character(c(0:26))
combty = c("chronic UTI",
# one-hot encoding
combtyid = as.character(c(0:26))
combty = c("chronic UTI",
"CAD",
"CHF",
"arrythmia",
"HTN",
"respiratory",
"UGI bleeding / ulcer",
"ESRD (HD)",
"ESRD (PD)",
"DM",
"CVA",
"Neuromuscular",
"Psychiartic",
"Rheumatology",
"AIDS",
"malignancy (非UTUC/ bladder UC)",
"alcohol",
"Illicit drug",
"gout",
"renal transplantation",
"liver transplantation",
"Thyroid",
"Ipsilateral stone",
"HBV",
"HCV",
"liver cirrhosis")
df_Comoerbidity = data.frame(matrix(,
nrow = nrow(UTUC_retr),
ncol = length(combty)),
row.names = rownames(UTUC_retr)
)
colnames(df_Comoerbidity) =
for(com in combtyid){
com_checkTF = 1*grepl(com, UTUC_retr$Comorbidity.多選.)
df_Comoerbidity[com] = com_checkTF
}
for(i in 1:6314){
if(sum(df_Comoerbidity[i,])==0){
df_Comoerbidity[i,] = NA
}
View(df_Comoerbidity)
combtyid = as.character(c(0:26))
combty = c("chronic UTI",
"CAD",
"CHF",
"arrythmia",
"HTN",
"respiratory",
"UGI bleeding / ulcer",
"ESRD (HD)",
"ESRD (PD)",
"DM",
"CVA",
"Neuromuscular",
"Psychiartic",
"Rheumatology",
"AIDS",
"malignancy (非UTUC/ bladder UC)",
"alcohol",
"Illicit drug",
"gout",
"renal transplantation",
"liver transplantation",
"Thyroid",
"Ipsilateral stone",
"HBV",
"HCV",
"liver cirrhosis")
df_Comoerbidity = data.frame(matrix(,
nrow = nrow(UTUC_retr),
ncol = length(combty)),
row.names = rownames(UTUC_retr)
)
df_Comoerbidity = data.frame(matrix(,
nrow = nrow(UTUC_retr),
ncol = length(combty)),
row.names = rownames(UTUC_retr)
)
colnames(df_Comoerbidity) = combty
for(com in combtyid){
com_checkTF = 1*grepl(com, UTUC_retr$Comorbidity.多選.)
df_Comoerbidity[com] = com_checkTF
}
for(i in 1:6314){
if(sum(df_Comoerbidity[i,])==0){
df_Comoerbidity[i,] = NA
}
View(df_Comoerbidity)
combtyid = as.character(c(0:26))
combty = c("none",
"chronic UTI",
"CAD",
"CHF",
"arrythmia",
"HTN",
"respiratory",
"UGI bleeding / ulcer",
"ESRD (HD)",
"ESRD (PD)",
"DM",
"CVA",
"Neuromuscular",
"Psychiartic",
"Rheumatology",
"AIDS",
"malignancy (非UTUC/ bladder UC)",
"alcohol",
"Illicit drug",
"gout",
"renal transplantation",
"liver transplantation",
"Thyroid",
"Ipsilateral stone",
"HBV",
"HCV",
"liver cirrhosis")
df_Comoerbidity = data.frame(matrix(,
nrow = nrow(UTUC_retr),
ncol = length(combty)),
row.names = rownames(UTUC_retr)
)
View(df_Comoerbidity)
colnames(df_Comoerbidity) = combty
View(df_Comoerbidity)
for(com in 1:27){
com_checkTF = 1*grepl(combtyid[com], UTUC_retr$Comorbidity.多選.)
df_Comoerbidity[,com] = com_checkTF
}
for(i in 1:6314){
if(sum(df_Comoerbidity[i,])==0){
df_Comoerbidity[i,] = NA
}
View(df_Comoerbidity)
data.frame(org_data = UTUC_retr$Comorbidity.多選., OHencoding = df_Comoerbidity$`ESRD (HD)`)
for(i in 1:6314){
if(UTUC_retr$Comorbidity.多選.[i] == NA | UTUC_retr$Comorbidity.多選.[i]==""){
df_Comoerbidity[i,] = NA
}
UTUC_retr$Comorbidity.多選.[1]
for(i in 1:6314){
if(UTUC_retr$Comorbidity.多選.[i]==""){
df_Comoerbidity[i,] = NA
}
UTUC_retr$Comorbidity.多選.[1]
UTUC_retr$Comorbidity.多選.[6000]
for(i in 1:6314){
if(UTUC_retr$Comorbidity.多選.[i]==""){
print(1)#df_Comoerbidity[i,] = NA
}
UTUC_retr$Comorbidity.多選.[186]
is.na(UTUC_retr$Comorbidity.多選.[186]
)
for(i in 1:6314){
if(UTUC_retr$Comorbidity.多選.[i]==""||is.na(UTUC_retr$Comorbidity.多選.[i])){
print(1)#df_Comoerbidity[i,] = NA
}
for(i in 1:6314){
if(UTUC_retr$Comorbidity.多選.[i]==""||is.na(UTUC_retr$Comorbidity.多選.[i])){
df_Comoerbidity[i,] = NA
}
View(df_Comoerbidity)
# one-hot encoding
combtyid = as.character(c(0:26))
combty = c("none",
"chronic UTI",
"CAD",
"CHF",
"arrythmia",
"HTN",
"respiratory",
"UGI bleeding / ulcer",
"ESRD (HD)",
"ESRD (PD)",
"DM",
"CVA",
"Neuromuscular",
"Psychiartic",
"Rheumatology",
"AIDS",
"malignancy (非UTUC/ bladder UC)",
"alcohol",
"Illicit drug",
"gout",
"renal transplantation",
"liver transplantation",
"Thyroid",
"Ipsilateral stone",
"HBV",
"HCV",
"liver cirrhosis")
df_Comoerbidity = data.frame(matrix(,
nrow = nrow(UTUC_retr),
ncol = length(combty)),
row.names = rownames(UTUC_retr)
)
colnames(df_Comoerbidity) = combty
for(com in 1:27){
com_checkTF = 1*grepl(combtyid[com], UTUC_retr$Comorbidity.多選.)
df_Comoerbidity[,com] = com_checkTF
}
for(i in 1:6314){
if(UTUC_retr$Comorbidity.多選.[i]==""||is.na(UTUC_retr$Comorbidity.多選.[i])){
df_Comoerbidity[i,] = NA
}
#check
data.frame(org_data = UTUC_retr$Comorbidity.多選., OHencoding = df_Comoerbidity$`ESRD (HD)`)
utuc_onehotEncoding = function(df, id = c(), opt = c()){
p = length(id)
n = nrow(df)
id = as.character(id)
df_onehotEncoding = data.frame(matrix(,
nrow = n,
ncol = p),
row.names = rownames(df))
colnames(df_onehotEncoding) = combty
for(optid in 1:p){
checkTF = 1*grepl(id[optid], df)
df_onehotEncoding[,optid] = checkTF
}
for(i in 1:n){
if(df[i]==""||is.na(df[i])){
df_onehotEncoding[i,] = NA
}
utuc_onehotEncoding(UTUC_retr$Comorbidity.多選., combtyid, combty)
utuc_onehotEncoding = function(df, id = c(), opt = c()){
p = length(id)
n = length(df)
id = as.character(id)
df_onehotEncoding = data.frame(matrix(,
nrow = n,
ncol = p),
row.names = rownames(df))
colnames(df_onehotEncoding) = combty
for(optid in 1:p){
checkTF = 1*grepl(id[optid], df)
df_onehotEncoding[,optid] = checkTF
}
for(i in 1:n){
if(df[i]==""||is.na(df[i])){
df_onehotEncoding[i,] = NA
}
return(df_onehotEncoding)
}
utuc_onehotEncoding(UTUC_retr$Comorbidity.多選., combtyid, combty)
load("20240613.RData")
library(tableone)
library(kableExtra)
library(tidyverse)
library(dplyr)
library(ggplot2)
load("20240613.RData")
kable(df_robot, "html")%>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
scroll_box(width = "100%", height = "550px")%>%
kable_paper(full_width = T)
kable(df_robot, "html")%>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
scroll_box(width = "100%", height = "550px")%>%
kable_paper(full_width = T)%>%
row_spec(0, font_size = 14)%>%
row_spec(1:457, font_size = 11)
kable(df_robot, "html")%>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
scroll_box(width = "100%", height = "400px")%>%
kable_paper(full_width = T)
df_robot_table1 =  kable(df_robot, "html")%>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
scroll_box(width = "100%", height = "400px")%>%
kable_paper(full_width = T)
save.image("C:/_YiHsin/TPE_TCH/Working_Diary/TPE_ZCHworking/20240613.RData")
df_robot_table1 =  kable(df_robot, "html")%>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
scroll_box(width = "100%", height = "400px")%>%
kable_paper(full_width = T)
df_robot_table2 =  kable(df_robot_drop, "html")%>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
scroll_box(width = "100%", height = "400px")%>%
kable_paper(full_width = T)
save.image("C:/_YiHsin/TPE_TCH/Working_Diary/TPE_ZCHworking/20240613.RData")
load("20240613.RData")
df_robot_table1 =  kable(head(df_robot), "html")%>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
scroll_box(width = "100%", height = "400px")%>%
kable_paper(full_width = T)
library(tableone)
library(kableExtra)
library(tidyverse)
library(dplyr)
library(ggplot2)
load("20240613.RData")
df_robot_table1 =  kable(head(df_robot), "html")%>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
scroll_box(width = "100%", height = "400px")%>%
kable_paper(full_width = T)
df_robot_table2 =  kable(head(df_robot_drop), "html")%>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
scroll_box(width = "100%", height = "400px")%>%
kable_paper(full_width = T)
save.image("C:/_YiHsin/TPE_TCH/Working_Diary/TPE_ZCHworking/202406114.RData")
save.image("C:/_YiHsin/TPE_TCH/Working_Diary/TPE_ZCHworking/20240614.RData")
#df_robot_table2 =
kable(head(df_robot_drop, "html"))%>%
scroll_box(width = "100%", height = "400px")%>%
kable_paper(full_width = T)
#df_robot_table2 =
kable(head(df_robot_drop, "html"))%>%
kable_styling() %>%
scroll_box(width = "100%", height = "400px")%>%
kable_paper(full_width = T)
#df_robot_table2 =
kable(head(df_robot_drop), "html")%>%
kable_styling() %>%
scroll_box(width = "100%", height = "400px")%>%
kable_paper(full_width = T)
summary(df_robot_drop)
summary(df_robot_drop%>%
transform(AGE_group = as.factor(AGE_group),
Sex = as.factor(Sex),
BMI_group = as.factor(BMI_group),
BMI_group2 = as.factor(BMI_group2),
APPROACH = as.factor(APPROACH),
ROBOT_SYS = as.factor(ROBOT_SYS),
ASA = as.factor(ASA),
ASA2 = as.factor(ASA2),
PRI = as.factor(PRI),
SIZE_PRE = as.factor(SIZE_PRE),
ITEM_LOWAB = as.factor(ITEM_LOWAB),
TECHNIQUE = as.factor(TECHNIQUE),
Laterality = as.factor(Laterality),
HERNIA_TYPE = as.factor(HERNIA_TYPE),
Another.type.hernia = as.factor(Another.type.hernia),
MESH_WEIGHT = as.factor(MESH_WEIGHT),
MESH_FIX = as.factor(MESH_FIX),
MESH_FIX_2cat = as.factor(MESH_FIX_2cat),
BLOOD_LOSS = as.factor(BLOOD_LOSS),
BLOOD_LOSS2 = as.factor(BLOOD_LOSS2),
PORT = as.factor(PORT),
Admission.date.of.readmission = as.factor(Admission.date.of.readmission),
Discharge.date.of.readmission = as.factor(Discharge.date.of.readmission)))
df_robot_drop1 = df_robot_drop%>%
transform(AGE_group = as.factor(AGE_group),
Sex = as.factor(Sex),
BMI_group = as.factor(BMI_group),
BMI_group2 = as.factor(BMI_group2),
APPROACH = as.factor(APPROACH),
ROBOT_SYS = as.factor(ROBOT_SYS),
ASA = as.factor(ASA),
ASA2 = as.factor(ASA2),
PRI = as.factor(PRI),
SIZE_PRE = as.factor(SIZE_PRE),
ITEM_LOWAB = as.factor(ITEM_LOWAB),
TECHNIQUE = as.factor(TECHNIQUE),
Laterality = as.factor(Laterality),
HERNIA_TYPE = as.factor(HERNIA_TYPE),
Another.type.hernia = as.factor(Another.type.hernia),
MESH_WEIGHT = as.factor(MESH_WEIGHT),
MESH_FIX = as.factor(MESH_FIX),
MESH_FIX_2cat = as.factor(MESH_FIX_2cat),
BLOOD_LOSS = as.factor(BLOOD_LOSS),
BLOOD_LOSS2 = as.factor(BLOOD_LOSS2),
PORT = as.factor(PORT),
Admission.date.of.readmission = as.factor(Admission.date.of.readmission),
Discharge.date.of.readmission = as.factor(Discharge.date.of.readmission))
df_robot_drop1 = df_robot_drop%>%
transform(AGE_group = as.factor(AGE_group),
Sex = as.factor(Sex),
BMI_group = as.factor(BMI_group),
BMI_group2 = as.factor(BMI_group2),
APPROACH = as.factor(APPROACH),
ROBOT_SYS = as.factor(ROBOT_SYS),
ASA = as.factor(ASA),
ASA2 = as.factor(ASA2),
PRI = as.factor(PRI),
SIZE_PRE = as.factor(SIZE_PRE),
ITEM_LOWAB = as.factor(ITEM_LOWAB),
TECHNIQUE = as.factor(TECHNIQUE),
Laterality = as.factor(Laterality),
HERNIA_TYPE = as.factor(HERNIA_TYPE),
Another.type.hernia = as.factor(Another.type.hernia),
MESH_WEIGHT = as.factor(MESH_WEIGHT),
MESH_FIX = as.factor(MESH_FIX),
MESH_FIX_2cat = as.factor(MESH_FIX_2cat),
BLOOD_LOSS = as.factor(BLOOD_LOSS),
BLOOD_LOSS2 = as.factor(BLOOD_LOSS2),
PORT = as.factor(PORT),
Admission.date.of.readmission = as.factor(Admission.date.of.readmission),
Discharge.date.of.readmission = as.factor(Discharge.date.of.readmission))
save.image("C:/_YiHsin/TPE_TCH/Working_Diary/TPE_ZCHworking/20240614.RData")
library(tableone)
library(kableExtra)
library(tidyverse)
library(dplyr)
library(ggplot2)
load("20240614.RData")
df_robot_table1 =  kable(head(df_robot), "html")%>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
scroll_box(width = "100%", height = "400px")%>%
kable_paper(full_width = T)
df_robot_table2 =  kable(head(df_robot_drop, "html")%>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
scroll_box(width = "100%", height = "400px")%>%
kable_paper(full_width = T)
df_robot_table1 =  kable(head(df_robot), "html")%>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
scroll_box(width = "100%", height = "400px")%>%
kable_paper(full_width = T)
df_robot_table2 =  kable(head(df_robot_drop), "html")%>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
scroll_box(width = "100%", height = "400px")%>%
kable_paper(full_width = T)
df_robot_table1
df_robot_table2
df_robot_drop1 = df_robot_drop%>%
transform(AGE_group = as.factor(AGE_group),
Sex = as.factor(Sex),
BMI_group = as.factor(BMI_group),
BMI_group2 = as.factor(BMI_group2),
APPROACH = as.factor(APPROACH),
ROBOT_SYS = as.factor(ROBOT_SYS),
ASA = as.factor(ASA),
ASA2 = as.factor(ASA2),
PRI = as.factor(PRI),
SIZE_PRE = as.factor(SIZE_PRE),
ITEM_LOWAB = as.factor(ITEM_LOWAB),
TECHNIQUE = as.factor(TECHNIQUE),
Laterality = as.factor(Laterality),
HERNIA_TYPE = as.factor(HERNIA_TYPE),
Another.type.hernia = as.factor(Another.type.hernia),
MESH_WEIGHT = as.factor(MESH_WEIGHT),
MESH_FIX = as.factor(MESH_FIX),
MESH_FIX_2cat = as.factor(MESH_FIX_2cat),
BLOOD_LOSS = as.factor(BLOOD_LOSS),
BLOOD_LOSS2 = as.factor(BLOOD_LOSS2),
PORT = as.factor(PORT),
Admission.date.of.readmission = as.factor(Admission.date.of.readmission),
Discharge.date.of.readmission = as.factor(Discharge.date.of.readmission))
summary(df_robot_drop1)
Robot_analyze1
Robot_analyze
df_robot_drop1 = df_robot_drop%>%
transform(AGE_group = as.factor(AGE_group),
Sex = as.factor(Sex),
BMI_group = as.factor(BMI_group),
BMI_group2 = as.factor(BMI_group2),
APPROACH = as.factor(APPROACH),
ROBOT_SYS = as.factor(ROBOT_SYS),
ASA = as.factor(ASA),
ASA2 = as.factor(ASA2),
PRI = as.factor(PRI),
SIZE_PRE = as.factor(SIZE_PRE),
ITEM_LOWAB = as.factor(ITEM_LOWAB),
TECHNIQUE = as.factor(TECHNIQUE),
Laterality = as.factor(Laterality),
HERNIA_TYPE = as.factor(HERNIA_TYPE),
Another.type.hernia = as.factor(Another.type.hernia),
MESH_WEIGHT = as.factor(MESH_WEIGHT),
MESH_FIX = as.factor(MESH_FIX),
MESH_FIX_2cat = as.factor(MESH_FIX_2cat),
BLOOD_LOSS = as.factor(BLOOD_LOSS),
BLOOD_LOSS2 = as.factor(BLOOD_LOSS2),
PORT = as.factor(PORT),
Admission.date.of.readmission = as.factor(Admission.date.of.readmission),
Discharge.date.of.readmission = as.factor(Discharge.date.of.readmission))
save.image("C:/_YiHsin/TPE_TCH/Working_Diary/TPE_ZCHworking/20240614.RData")
library(tableone)
library(kableExtra)
library(tidyverse)
library(dplyr)
library(ggplot2)
load("20240614.RData")
df_robot_table1 =  kable(head(df_robot), "html")%>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
scroll_box(width = "100%", height = "400px")%>%
kable_paper(full_width = T)
df_robot_table2 =  kable(head(df_robot_drop), "html")%>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed")) %>%
scroll_box(width = "100%", height = "400px")%>%
kable_paper(full_width = T)
df_robot_table1
df_robot_table2
df_robot_drop1 = df_robot_drop%>%
transform(AGE_group = as.factor(AGE_group),
Sex = as.factor(Sex),
BMI_group = as.factor(BMI_group),
BMI_group2 = as.factor(BMI_group2),
APPROACH = as.factor(APPROACH),
ROBOT_SYS = as.factor(ROBOT_SYS),
ASA = as.factor(ASA),
ASA2 = as.factor(ASA2),
PRI = as.factor(PRI),
SIZE_PRE = as.factor(SIZE_PRE),
ITEM_LOWAB = as.factor(ITEM_LOWAB),
TECHNIQUE = as.factor(TECHNIQUE),
Laterality = as.factor(Laterality),
HERNIA_TYPE = as.factor(HERNIA_TYPE),
Another.type.hernia = as.factor(Another.type.hernia),
MESH_WEIGHT = as.factor(MESH_WEIGHT),
MESH_FIX = as.factor(MESH_FIX),
MESH_FIX_2cat = as.factor(MESH_FIX_2cat),
BLOOD_LOSS = as.factor(BLOOD_LOSS),
BLOOD_LOSS2 = as.factor(BLOOD_LOSS2),
PORT = as.factor(PORT),
Admission.date.of.readmission = as.factor(Admission.date.of.readmission),
Discharge.date.of.readmission = as.factor(Discharge.date.of.readmission))
summary(df_robot_drop1)
save.image("C:/_YiHsin/TPE_TCH/Working_Diary/TPE_ZCHworking/2024.06.14.test.RData")
