{
  "hash": "eea8594de9a86a46c1a0d791e47858fe",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"**Basic Statistical Analysis with R**\"\nauthor: \"Yi-Hsin Lu\"\noutput:\n  html_document:\n  toc: true\n  toc_float: true\n  df_print: paged\n---\n\n\n<head>\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css\" integrity=\"sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\n\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css\">\n</head>\n\n****\n\nIn this tutorial, we start with simple R code, and we then introduce basic statistics and probabilities. Utilizing R code and packages to learn statistics methods is the core of this webpage. (here's the [presentation](https://yihsinlu.github.io/2024R.io/docs/presentation/Presentation2024summer.html))\n\n-   R\n\n-   Probability and Statistics\n\n-   Data with R\n\n-   Statistics with R\n\n-   Model with R\n\n****\n\n### **WHY?**\n\nWhy is it important to learn statistics, and why do we use R for data analysis? In the current era characterized by big data, extensive information, and artificial intelligence (AI), statistical models form the cornerstone of AI and machine learning. Statistics provide a comprehensive framework for explaining outcomes, parameters, and nearly all aspects of these models. By utilizing R, a powerful statistical computing language, researchers can efficiently analyze and interpret complex datasets, thereby advancing the field of data science.\n\n------------------------------------------------------------------------\n\n# **1 R**\n\nJ.D. Long, P. Teetor ([2019](https://rc2e.com/)) present a R cookbook by bookdown.\\\n\nStart with [install R](https://cran.r-project.org/bin/windows/base/) and its compiler [R studio](https://posit.co/downloads/).\\\n( See more detail from cookbook: [1.1 Downloading and installing R](https://rc2e.com/gettingstarted#recipe-id001) and [1.2 Installing R studio](https://rc2e.com/gettingstarted#recipe-id002b) )\n\n------------------------------------------------------------------------\n\n## **1.1 Get Start**\n\nThe R studio page display 4 windows unless nav-bar, The upper left window is the opening file, I prefer using `.Rmd` file (R markdown). As FIG 1, we code between the area and see the result below. You also could type the code behind the `>` on lower left window, and click enter to run the code. Two right windows illustrate the variable, function, and packages, we will introduce how they work later.\n\n![**FIG 1**](fig/Rstudio_start.jpg)\n\n------------------------------------------------------------------------\n\n## **1.2 Variables**\n\nFor the problem of using `<-` or `=`, we will see the same result for setting variables but my suggestion is `<-`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- 100\nx = 100\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n[1] 100\n```\n\n\n:::\n:::\n\n\n### **1.2.1 integer**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nint <- 10\nint\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n[1] 10\n```\n\n\n:::\n:::\n\n\n### **1.2.2 function**\n\n$$\nf(x)=x^2+2x+1\\text{, and find } f(\\pi).\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nf <- function(x){ x^2+2*x+1 }\nf(pi)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n[1] 17.15279\n```\n\n\n:::\n:::\n\n\nUsing `?function_name` to see detail in th function.\n\n### **1.2.3 character**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchr <- \"I am a character\"\nchr\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n[1] \"I am a character\"\n```\n\n\n:::\n:::\n\n\n### **1.2.4 vector**\n\nBe careful the variable name, such as c is a function fro creating vectors.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nV1 <- c(1:10)\nV2 <- c(\"2\", 2)\nV1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n [1]  1  2  3  4  5  6  7  8  9 10\n```\n\n\n:::\n\n```{.r .cell-code}\nV2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n[1] \"2\" \"2\"\n```\n\n\n:::\n:::\n\n\n\n\n### **1.2.5 factor**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nF1 <- factor(c(1,0,1,1,0,1))\nF1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n[1] 1 0 1 1 0 1\nLevels: 0 1\n```\n\n\n:::\n:::\n\n\n### **1.2.6 list**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nList1 <- list(integer1 = int,\n              character1 = chr,\n              vector1 = V1,\n              function1 = f,\n              factor1 = F1)\n\nList1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n$integer1\n[1] 10\n\n$character1\n[1] \"I am a character\"\n\n$vector1\n [1]  1  2  3  4  5  6  7  8  9 10\n\n$function1\nfunction(x){ x^2+2*x+1 }\n\n$factor1\n[1] 1 0 1 1 0 1\nLevels: 0 1\n```\n\n\n:::\n:::\n\n\n### **1.2.7 matrix**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nM1 <- matrix(c(1,2,1,\n               0,2,7),\n             ncol = 3,nrow = 2,byrow = T)\nM1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n     [,1] [,2] [,3]\n[1,]    1    2    1\n[2,]    0    2    7\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nM2 <- matrix(c(1,0,0,\n               0,1,0,\n               0,0,1), ncol = 3, nrow = 3, byrow = T)\nM2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n     [,1] [,2] [,3]\n[1,]    1    0    0\n[2,]    0    1    0\n[3,]    0    0    1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nM1%*%M2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n     [,1] [,2] [,3]\n[1,]    1    2    1\n[2,]    0    2    7\n```\n\n\n:::\n:::\n\n\n### **1.2.8 data frame**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data.frame(Name = c(\"Sam\", \"Yuji\", \"Lan\", \"Elaine\"),\n                 Age = c(28,24,NA,NA),\n                 Height = c(177, 187, 159, 164),\n                 Gender = factor(c(\"M\", \"M\", \"F\", \"F\")))\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n    Name Age Height Gender\n1    Sam  28    177      M\n2   Yuji  24    187      M\n3    Lan  NA    159      F\n4 Elaine  NA    164      F\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## **1.3 If**\n\n### **1.3.1 Logic**\n\n* `TRUE`\n* `FALSE`\n\n#### Is $a=b$ ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- 2\nb <- 1\n\na==b\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n[1] FALSE\n```\n\n\n:::\n:::\n\n\n#### Is $a\\neq b$ ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\na!=b\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n#### Is $a\\geq b$ ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\na>=b\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n### **1.3.2 If Else**\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- 148\n\nif(a%%2==0){\n  \"a is divided by 2.\"\n}else{\n  \"a is not divided by 2.\"\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n[1] \"a is divided by 2.\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\na <- 148\n\nif(a%%2==0 & a%%3==0){\n  \"a is divided by 2 and 3.\"\n}else if(a%%2==0){\n  \"a is only divided by 2.\"\n}else if(a%%3==0){\n  \"a is only divided by 3.\"\n}else{\n  \"a is not divided by 2 or 3.\"\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n[1] \"a is only divided by 2.\"\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## **1.4 Loop**\n\nWhen you repeat the same things many times.\n\n### **1.4.1 for**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbuliding <- c()\n\nfor(Floor in 1:101){\n  buliding <- rbind(Floor, buliding)\n}\n\nbuliding\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n      [,1]\nFloor  101\nFloor  100\nFloor   99\nFloor   98\nFloor   97\nFloor   96\nFloor   95\nFloor   94\nFloor   93\nFloor   92\nFloor   91\nFloor   90\nFloor   89\nFloor   88\nFloor   87\nFloor   86\nFloor   85\nFloor   84\nFloor   83\nFloor   82\nFloor   81\nFloor   80\nFloor   79\nFloor   78\nFloor   77\nFloor   76\nFloor   75\nFloor   74\nFloor   73\nFloor   72\nFloor   71\nFloor   70\nFloor   69\nFloor   68\nFloor   67\nFloor   66\nFloor   65\nFloor   64\nFloor   63\nFloor   62\nFloor   61\nFloor   60\nFloor   59\nFloor   58\nFloor   57\nFloor   56\nFloor   55\nFloor   54\nFloor   53\nFloor   52\nFloor   51\nFloor   50\nFloor   49\nFloor   48\nFloor   47\nFloor   46\nFloor   45\nFloor   44\nFloor   43\nFloor   42\nFloor   41\nFloor   40\nFloor   39\nFloor   38\nFloor   37\nFloor   36\nFloor   35\nFloor   34\nFloor   33\nFloor   32\nFloor   31\nFloor   30\nFloor   29\nFloor   28\nFloor   27\nFloor   26\nFloor   25\nFloor   24\nFloor   23\nFloor   22\nFloor   21\nFloor   20\nFloor   19\nFloor   18\nFloor   17\nFloor   16\nFloor   15\nFloor   14\nFloor   13\nFloor   12\nFloor   11\nFloor   10\nFloor    9\nFloor    8\nFloor    7\nFloor    6\nFloor    5\nFloor    4\nFloor    3\nFloor    2\nFloor    1\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n# **2 Probabilities and Statistics**\n\nTextbook: [A Modern Introduction to Probability and Statistics](https://cis.temple.edu/~latecki/Courses/CIS2033-Spring13/Modern_intro_probability_statistics_Dekking05.pdf)\n\n------------------------------------------------------------------------\n\n## **2.1 Probability Space**\n\n$$\n\\Large (S, P)\n$$\n\n-   $S$: Sample space, all of the occurring events.\n\n-   $P$: probability measure, the value of the occurring event, and between 0 and 1.\n\n------------------------------------------------------------------------\n\n### **2.1.1 example**\n\nProbability space of tossing a fair coin, then:\n\n-   $S = \\{H,T\\}$\n\n-   $P(\\{H\\})=P(\\{T\\})=\\frac{1}{2}$\n\n### **2.1.2 another example**\n\nProbability space of tossing a fair dice, then:\n\n-   $S = \\{$ <i class=\"fa-solid fa-dice-one\"></i> $,$ <i class=\"fa-solid fa-dice-two\"></i> $,$ <i class=\"fa-solid fa-dice-three\"></i> $,$ <i class=\"fa-solid fa-dice-four\"></i> $,$ <i class=\"fa-solid fa-dice-five\"></i> $,$ <i class=\"fa-solid fa-dice-six\"></i> $\\}$\n\n-   $P(\\{$ <i class=\"fa-solid fa-dice-one\"></i> $\\})=$ $P(\\{$ <i class=\"fa-solid fa-dice-two\"></i> $\\})=$ $P(\\{$ <i class=\"fa-solid fa-dice-three\"></i> $\\})=$ $P(\\{$ <i class=\"fa-solid fa-dice-four\"></i> $\\})=$ $P(\\{$ <i class=\"fa-solid fa-dice-five\"></i> $\\})=$ $P(\\{$ <i class=\"fa-solid fa-dice-six\"></i> $\\})=$ $\\frac{1}{6}$\n\n### **2.1.3 Probability Measure**\n\n-   Three Axiom\n\n    -   $0\\leq P(A)\\leq 1,\\;\\forall A$\n\n    -   $P(S) = 1$\n\n    -   $P(\\bigcup_{i=1}^n A_i)=\\sum_{i=1}^n P(A_i), \\text{where }A_i\\cap A_j=\\varnothing,\\;\\forall i,j$\n\n------------------------------------------------------------------------\n\n## **2.2 Discrete Random Variable**\n\n-   Use X,Y,Z,... define random variables, and x,y,z,.. define values.\n\n-   Random Variables $X$ includes all possible outcomes.\n\n-   Probability is denoted by $P(X=x)=f(x)$.\n\n-   Mean: $E(X) = \\sum_{x=1}^nx_if(x) = \\mu$\n\n-   variance:$Var(X) = \\sum_{x=1}^n(x-\\mu)^2f(x)= E(X-E(X))^2=E(X^2)-(E(X))^2$\n\n------------------------------------------------------------------------\n\n### **2.2.1 Binomial**\n\n$$\n\\Large X\\sim B(n,p)\n$$\n\n-   $n$ and $p$ are parameters of distribution\n\n-   $n$: n times for trail\n\n-   $p$: probability of event for each trail\n\n-   Probability Mass Function (pmf):\n\n$$\nf_X(x) = \\binom{n}{x}\\;p^xq^{n-x},\\;\\forall x = 1, \\cdots, n\n$$\n\n------------------------------------------------------------------------\n\n## **2.3 Continuous Random Variable**\n\n-   Probability is denoted by $P(X\\leq x)=\\int_{-\\infty}^xf(x)dx$, then $P(X=x)=0$\n\n-   Mean: $E(X) = \\int_\\mathbb {r class.output=\"code-output\"}xf_X(x)dx = \\mu$\n\n-   variance:$Var(X) = \\int_\\mathbb {r class.output=\"code-output\"}(x-\\mu)^2f_X(x)dx = E(X-E(X))^2=E(X^2)-(E(X))^2$\n\n------------------------------------------------------------------------\n\n### **2.3.1 Exponential**\n\n-   $X\\sim\\exp(\\lambda)$\n\n-   Probability Density Function (pdf.) $f_X(x) = \\lambda e^{-\\lambda x}$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nf <- function(x, lambda = 1){lambda*exp(-lambda*x)}\ncurve(f,from = 0, to = 5, col = 1)\ncurve(f(x,2),from = 0, to = 5, col = 2, add = TRUE)\ncurve(f(x,.5),from = 0, to = 5, col = 3, add = TRUE)\n```\n\n::: {.cell-output-display}\n![](Rtutorial_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n### **2.3.2 Normal**\n\n$$\n\\Large X\\sim N(\\mu, \\sigma^2)\n$$\n\n$$\nf_X(x) = \\cfrac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}},\\;\\forall\\;x\\in\\mathbb{R}\n$$\n\n------------------------------------------------------------------------\n\n### **2.3.3 t-distribution**\n\n-   $X\\sim t_n$\n\n-   $t_n\\overset{d}{=}\\color {r class.output=\"code-output\"ed}{N(0,1)}\\;$ as $\\;n\\rightarrow\\infty$\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncurve(dt(x,df=1),from=-4,to=4,col=\"#000000\",ylim=c(0,0.4))\ncurve(dt(x,df=2),from=-4,to=4,col=\"#240000\",add=T)\ncurve(dt(x,df=3),from=-4,to=4,col=\"#460000\",add=T)\ncurve(dt(x,df=4),from=-4,to=4,col=\"#690000\",add=T)\ncurve(dt(x,df=5),from=-4,to=4,col=\"#800000\",add=T)\ncurve(dt(x,df=8),from=-4,to=4,col=\"#990000\",add=T)\ncurve(dt(x,df=10),from=-4,to=4,col=\"#bb0000\",add=T)\ncurve(dt(x,df=50),from=-4,to=4,col=\"#cc0000\",add=T)\ncurve(dt(x,df=91),from=-4,to=4,col=\"#dd0000\",add=T)\ncurve(dt(x,df=100),from=-4,to=4,col=\"#ee0000\",add=T)\ncurve(dnorm(x,0,1),from=-4,to=4,col=\"#ff0000\",add=T)\n```\n\n::: {.cell-output-display}\n![](Rtutorial_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n# **3 Data with R**\n\n------------------------------------------------------------------------\n\n## **3.1 Random Sample**\n\n$$\n\\mathcal{X}=(X_1, X_2,\\cdots, X_{100}),\\;\\forall\\;X_i\\overset{iid}{\\sim} N(160,10)\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(19970608)\n#random\nx <- rnorm(n = 100, mean = 160, sd = sqrt(10))\nsort(x, decreasing = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n  [1] 150.2045 150.3638 151.9515 152.4867 153.2311 153.9550 155.0583 155.1287\n  [9] 155.4500 155.8637 156.0542 156.3821 156.4040 156.6807 156.8222 156.9162\n [17] 156.9413 157.3930 157.4179 157.4487 157.4901 157.5814 157.6270 157.8093\n [25] 158.1321 158.1779 158.1841 158.2011 158.3338 158.4286 158.5381 158.5747\n [33] 158.6128 158.6130 158.6211 158.7004 158.8500 158.9164 158.9294 158.9382\n [41] 158.9697 159.0128 159.0373 159.3363 159.4597 159.5536 159.6015 159.7461\n [49] 159.8022 159.8833 159.8919 159.9494 159.9613 159.9639 160.1277 160.2413\n [57] 160.2432 160.2516 160.2878 160.4307 160.5644 160.5740 160.7001 160.8122\n [65] 160.8769 160.8916 160.9366 160.9986 161.0055 161.0284 161.0291 161.2953\n [73] 161.3876 161.4904 161.5726 161.6253 161.6258 161.6970 161.7136 161.8119\n [81] 162.3868 162.4849 162.5548 162.6081 163.2007 163.2842 163.4371 163.7381\n [89] 163.8430 163.8762 164.2689 164.4121 164.4778 165.3108 165.5170 165.9530\n [97] 166.4605 167.1191 167.4459 168.5680\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## **3.2 Histogram**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(x, nclass = 20)\n```\n\n::: {.cell-output-display}\n![](Rtutorial_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## **3.3 Data table**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(kableExtra)\ndf <- read.csv(file = \"csv/df.csv\", fileEncoding = \"Big5\")\nkable(df)\n```\n\n::: {.cell-output-display}\n\n\n|Name         | Height| Weight|Gender | Age|\n|:------------|------:|------:|:------|---:|\n|Sam Lu       |    177|     82|M      |  28|\n|Lan Huang    |    159|     45|F      |  21|\n|Yuji Nishida |    187|     89|M      |  24|\n|Elaine Liao  |    164|     53|F      |  27|\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## **3.4 New Data (Male)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(randomNames)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'randomNames' was built under R version 4.4.1\n```\n\n\n:::\n\n```{.r .cell-code}\nset.seed(19970608)\nNew_df.M <- data.frame(Name = randomNames(n = 68, gender = 0, which.names = \"first\"),\n                       Height = rnorm(68, 175, 10),\n                       Weight = rnorm(68, 70, 10),\n                       Gender = rep(\"M\", 68),\n                       Age = sample(20:40, size = 68, replace = TRUE))\nNew_df.M\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n         Name   Height   Weight Gender Age\n1      K'Yeir 169.0641 71.25260      M  24\n2        Todd 161.5081 72.95488      M  24\n3     Grayson 156.8791 63.20119      M  23\n4        Sean 162.5517 71.09409      M  21\n5   John Jack 183.2003 80.62568      M  27\n6      Arnold 180.6811 57.20870      M  36\n7   Alexander 166.0615 76.05074      M  32\n8      Martin 164.8190 65.83416      M  27\n9       Caleb 165.7444 60.00731      M  22\n10       Fahd 168.9666 70.29166      M  26\n11    Richard 151.2488 59.51451      M  27\n12    Maisoon 172.0869 54.96665      M  40\n13      Wyatt 178.2969 84.39411      M  25\n14    Gabriel 181.5490 62.28819      M  28\n15      Arjun 164.6829 58.11602      M  34\n16      Iyaad 181.8277 66.93043      M  40\n17   Krishnan 173.3551 53.77996      M  35\n18    Shannon 169.3024 81.05558      M  25\n19    Mateaki 174.1858 68.84617      M  21\n20       Troy 181.4995 60.89021      M  30\n21     Justin 177.4832 58.76640      M  32\n22      Tommy 190.4390 73.40946      M  34\n23  Francisco 163.9545 75.14024      M  40\n24     Aditya 170.4974 57.16677      M  24\n25     German 168.4081 65.17194      M  36\n26    Shabaan 171.7217 81.85284      M  34\n27     Josiah 180.1860 61.18464      M  40\n28     Robert 174.5392 73.94088      M  35\n29     Daniel 194.5053 60.68860      M  25\n30   Nicholas 178.9981 52.59500      M  32\n31     Ubaida 163.9013 70.35374      M  34\n32     Joseph 177.8806 58.91115      M  27\n33      Malik 182.9758 60.63631      M  33\n34     Justin 172.9407 72.85916      M  30\n35       Ross 172.8970 70.93185      M  35\n36     Darius 178.3733 72.74777      M  36\n37     Jordan 198.7593 67.42554      M  21\n38      Jacob 193.8253 64.82768      M  26\n39      Allen 176.4536 84.59021      M  28\n40     Samuel 175.0794 64.06805      M  32\n41   Cristian 166.3076 59.14488      M  31\n42    Charles 185.5982 60.73456      M  31\n43      David 166.5796 56.39837      M  37\n44     Joshua 175.1916 62.62665      M  28\n45     Junaid 158.8254 65.18550      M  22\n46    Addison 188.4633 66.23809      M  26\n47      Tyler 179.9128 86.12639      M  31\n48   Muntasir 179.4149 83.41502      M  27\n49       Kyle 153.0340 56.79890      M  20\n50     Idrees 165.5594 80.75742      M  27\n51    Saurabh 192.0460 76.51732      M  40\n52    Michael 176.0576 63.67879      M  37\n53      Brett 170.9268 53.69865      M  33\n54    Stephen 172.1640 69.99810      M  34\n55     Jawaad 179.7093 70.25252      M  40\n56     Joseph 169.6818 96.97541      M  22\n57     Kaalim 185.6864 90.81831      M  37\n58    Shaheed 165.1097 85.74759      M  34\n59  Hyun Seok 178.3962 66.90712      M  37\n60   Jonathan 179.9638 80.33960      M  30\n61       Evan 169.2892 73.40476      M  24\n62    Wilbert 182.3091 76.55616      M  30\n63     Joseph 181.6480 71.25410      M  35\n64     Daniel 178.1894 84.61618      M  31\n65     Rifaah 173.0566 79.72135      M  38\n66 Badruddeen 172.9889 60.29281      M  37\n67      Blake 175.4729 63.45875      M  25\n68    Michael 163.4561 58.07225      M  39\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## **3.5 New Data (Female)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(randomNames)\nset.seed(19970607)\nNew_df.F <- data.frame(Name = randomNames(n = 28, gender = 1, which.names = \"first\"),\n                       Height = rnorm(28, 160, 10),\n                       Weight = rnorm(28, 50, 10),\n                       Gender = rep(\"F\", 28),\n                       Age = sample(20:40, size = 28, replace = TRUE))\nNew_df.F\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n        Name   Height   Weight Gender Age\n1   Manuella 176.8755 70.50918      F  34\n2      Eliza 158.4561 34.13702      F  37\n3      Katie 147.7548 50.47963      F  34\n4       Joan 160.1891 46.59308      F  21\n5     Hasana 165.6633 37.71016      F  24\n6  Queenisha 170.1549 47.21380      F  25\n7     Alyssa 164.2040 72.39072      F  33\n8      April 166.2919 36.28761      F  31\n9       Musu 155.7780 51.83896      F  35\n10     Sarah 181.0950 34.55192      F  27\n11    Hannah 148.1705 54.88439      F  21\n12     Alina 156.2318 38.12627      F  38\n13   Wajeeha 156.8470 33.25690      F  25\n14    Leslie 160.5540 42.68231      F  38\n15   Saaliha 153.0666 50.46320      F  21\n16   Tahaani 141.8334 43.47029      F  29\n17    Rainey 182.5422 52.79097      F  31\n18    Alyssa 172.1579 62.05662      F  24\n19       Hae 169.3396 44.76316      F  28\n20  Sabriyya 158.7216 60.41923      F  31\n21   Kathryn 162.0836 61.23471      F  22\n22    Hayley 169.4214 43.50545      F  39\n23      Rubi 168.2295 51.72027      F  33\n24 Alexandra 174.9692 40.51046      F  37\n25       Ana 145.6248 35.12445      F  33\n26  Shayonna 173.2791 33.49761      F  37\n27    Daisha 153.9036 49.12283      F  27\n28     Peggy 169.4468 54.75503      F  22\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## **3.6 New Data (n = 100)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNew_df <- rbind(df, New_df.M, New_df.F) #cbind()\nNew_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n            Name   Height   Weight Gender Age\n1         Sam Lu 177.0000 82.00000      M  28\n2      Lan Huang 159.0000 45.00000      F  21\n3   Yuji Nishida 187.0000 89.00000      M  24\n4    Elaine Liao 164.0000 53.00000      F  27\n5         K'Yeir 169.0641 71.25260      M  24\n6           Todd 161.5081 72.95488      M  24\n7        Grayson 156.8791 63.20119      M  23\n8           Sean 162.5517 71.09409      M  21\n9      John Jack 183.2003 80.62568      M  27\n10        Arnold 180.6811 57.20870      M  36\n11     Alexander 166.0615 76.05074      M  32\n12        Martin 164.8190 65.83416      M  27\n13         Caleb 165.7444 60.00731      M  22\n14          Fahd 168.9666 70.29166      M  26\n15       Richard 151.2488 59.51451      M  27\n16       Maisoon 172.0869 54.96665      M  40\n17         Wyatt 178.2969 84.39411      M  25\n18       Gabriel 181.5490 62.28819      M  28\n19         Arjun 164.6829 58.11602      M  34\n20         Iyaad 181.8277 66.93043      M  40\n21      Krishnan 173.3551 53.77996      M  35\n22       Shannon 169.3024 81.05558      M  25\n23       Mateaki 174.1858 68.84617      M  21\n24          Troy 181.4995 60.89021      M  30\n25        Justin 177.4832 58.76640      M  32\n26         Tommy 190.4390 73.40946      M  34\n27     Francisco 163.9545 75.14024      M  40\n28        Aditya 170.4974 57.16677      M  24\n29        German 168.4081 65.17194      M  36\n30       Shabaan 171.7217 81.85284      M  34\n31        Josiah 180.1860 61.18464      M  40\n32        Robert 174.5392 73.94088      M  35\n33        Daniel 194.5053 60.68860      M  25\n34      Nicholas 178.9981 52.59500      M  32\n35        Ubaida 163.9013 70.35374      M  34\n36        Joseph 177.8806 58.91115      M  27\n37         Malik 182.9758 60.63631      M  33\n38        Justin 172.9407 72.85916      M  30\n39          Ross 172.8970 70.93185      M  35\n40        Darius 178.3733 72.74777      M  36\n41        Jordan 198.7593 67.42554      M  21\n42         Jacob 193.8253 64.82768      M  26\n43         Allen 176.4536 84.59021      M  28\n44        Samuel 175.0794 64.06805      M  32\n45      Cristian 166.3076 59.14488      M  31\n46       Charles 185.5982 60.73456      M  31\n47         David 166.5796 56.39837      M  37\n48        Joshua 175.1916 62.62665      M  28\n49        Junaid 158.8254 65.18550      M  22\n50       Addison 188.4633 66.23809      M  26\n51         Tyler 179.9128 86.12639      M  31\n52      Muntasir 179.4149 83.41502      M  27\n53          Kyle 153.0340 56.79890      M  20\n54        Idrees 165.5594 80.75742      M  27\n55       Saurabh 192.0460 76.51732      M  40\n56       Michael 176.0576 63.67879      M  37\n57         Brett 170.9268 53.69865      M  33\n58       Stephen 172.1640 69.99810      M  34\n59        Jawaad 179.7093 70.25252      M  40\n60        Joseph 169.6818 96.97541      M  22\n61        Kaalim 185.6864 90.81831      M  37\n62       Shaheed 165.1097 85.74759      M  34\n63     Hyun Seok 178.3962 66.90712      M  37\n64      Jonathan 179.9638 80.33960      M  30\n65          Evan 169.2892 73.40476      M  24\n66       Wilbert 182.3091 76.55616      M  30\n67        Joseph 181.6480 71.25410      M  35\n68        Daniel 178.1894 84.61618      M  31\n69        Rifaah 173.0566 79.72135      M  38\n70    Badruddeen 172.9889 60.29281      M  37\n71         Blake 175.4729 63.45875      M  25\n72       Michael 163.4561 58.07225      M  39\n73      Manuella 176.8755 70.50918      F  34\n74         Eliza 158.4561 34.13702      F  37\n75         Katie 147.7548 50.47963      F  34\n76          Joan 160.1891 46.59308      F  21\n77        Hasana 165.6633 37.71016      F  24\n78     Queenisha 170.1549 47.21380      F  25\n79        Alyssa 164.2040 72.39072      F  33\n80         April 166.2919 36.28761      F  31\n81          Musu 155.7780 51.83896      F  35\n82         Sarah 181.0950 34.55192      F  27\n83        Hannah 148.1705 54.88439      F  21\n84         Alina 156.2318 38.12627      F  38\n85       Wajeeha 156.8470 33.25690      F  25\n86        Leslie 160.5540 42.68231      F  38\n87       Saaliha 153.0666 50.46320      F  21\n88       Tahaani 141.8334 43.47029      F  29\n89        Rainey 182.5422 52.79097      F  31\n90        Alyssa 172.1579 62.05662      F  24\n91           Hae 169.3396 44.76316      F  28\n92      Sabriyya 158.7216 60.41923      F  31\n93       Kathryn 162.0836 61.23471      F  22\n94        Hayley 169.4214 43.50545      F  39\n95          Rubi 168.2295 51.72027      F  33\n96     Alexandra 174.9692 40.51046      F  37\n97           Ana 145.6248 35.12445      F  33\n98      Shayonna 173.2791 33.49761      F  37\n99        Daisha 153.9036 49.12283      F  27\n100        Peggy 169.4468 54.75503      F  22\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## **3.7 Data editing**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'dplyr' was built under R version 4.4.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:kableExtra':\n\n    group_rows\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nNew_df <- New_df%>%\n  mutate(BMI = Weight/(Height/100)^2)%>%\n  transform(Gender = as.factor(Gender),\n            BMI = round(BMI, digits = 1))\nNew_df\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n            Name   Height   Weight Gender Age  BMI\n1         Sam Lu 177.0000 82.00000      M  28 26.2\n2      Lan Huang 159.0000 45.00000      F  21 17.8\n3   Yuji Nishida 187.0000 89.00000      M  24 25.5\n4    Elaine Liao 164.0000 53.00000      F  27 19.7\n5         K'Yeir 169.0641 71.25260      M  24 24.9\n6           Todd 161.5081 72.95488      M  24 28.0\n7        Grayson 156.8791 63.20119      M  23 25.7\n8           Sean 162.5517 71.09409      M  21 26.9\n9      John Jack 183.2003 80.62568      M  27 24.0\n10        Arnold 180.6811 57.20870      M  36 17.5\n11     Alexander 166.0615 76.05074      M  32 27.6\n12        Martin 164.8190 65.83416      M  27 24.2\n13         Caleb 165.7444 60.00731      M  22 21.8\n14          Fahd 168.9666 70.29166      M  26 24.6\n15       Richard 151.2488 59.51451      M  27 26.0\n16       Maisoon 172.0869 54.96665      M  40 18.6\n17         Wyatt 178.2969 84.39411      M  25 26.5\n18       Gabriel 181.5490 62.28819      M  28 18.9\n19         Arjun 164.6829 58.11602      M  34 21.4\n20         Iyaad 181.8277 66.93043      M  40 20.2\n21      Krishnan 173.3551 53.77996      M  35 17.9\n22       Shannon 169.3024 81.05558      M  25 28.3\n23       Mateaki 174.1858 68.84617      M  21 22.7\n24          Troy 181.4995 60.89021      M  30 18.5\n25        Justin 177.4832 58.76640      M  32 18.7\n26         Tommy 190.4390 73.40946      M  34 20.2\n27     Francisco 163.9545 75.14024      M  40 28.0\n28        Aditya 170.4974 57.16677      M  24 19.7\n29        German 168.4081 65.17194      M  36 23.0\n30       Shabaan 171.7217 81.85284      M  34 27.8\n31        Josiah 180.1860 61.18464      M  40 18.8\n32        Robert 174.5392 73.94088      M  35 24.3\n33        Daniel 194.5053 60.68860      M  25 16.0\n34      Nicholas 178.9981 52.59500      M  32 16.4\n35        Ubaida 163.9013 70.35374      M  34 26.2\n36        Joseph 177.8806 58.91115      M  27 18.6\n37         Malik 182.9758 60.63631      M  33 18.1\n38        Justin 172.9407 72.85916      M  30 24.4\n39          Ross 172.8970 70.93185      M  35 23.7\n40        Darius 178.3733 72.74777      M  36 22.9\n41        Jordan 198.7593 67.42554      M  21 17.1\n42         Jacob 193.8253 64.82768      M  26 17.3\n43         Allen 176.4536 84.59021      M  28 27.2\n44        Samuel 175.0794 64.06805      M  32 20.9\n45      Cristian 166.3076 59.14488      M  31 21.4\n46       Charles 185.5982 60.73456      M  31 17.6\n47         David 166.5796 56.39837      M  37 20.3\n48        Joshua 175.1916 62.62665      M  28 20.4\n49        Junaid 158.8254 65.18550      M  22 25.8\n50       Addison 188.4633 66.23809      M  26 18.6\n51         Tyler 179.9128 86.12639      M  31 26.6\n52      Muntasir 179.4149 83.41502      M  27 25.9\n53          Kyle 153.0340 56.79890      M  20 24.3\n54        Idrees 165.5594 80.75742      M  27 29.5\n55       Saurabh 192.0460 76.51732      M  40 20.7\n56       Michael 176.0576 63.67879      M  37 20.5\n57         Brett 170.9268 53.69865      M  33 18.4\n58       Stephen 172.1640 69.99810      M  34 23.6\n59        Jawaad 179.7093 70.25252      M  40 21.8\n60        Joseph 169.6818 96.97541      M  22 33.7\n61        Kaalim 185.6864 90.81831      M  37 26.3\n62       Shaheed 165.1097 85.74759      M  34 31.5\n63     Hyun Seok 178.3962 66.90712      M  37 21.0\n64      Jonathan 179.9638 80.33960      M  30 24.8\n65          Evan 169.2892 73.40476      M  24 25.6\n66       Wilbert 182.3091 76.55616      M  30 23.0\n67        Joseph 181.6480 71.25410      M  35 21.6\n68        Daniel 178.1894 84.61618      M  31 26.6\n69        Rifaah 173.0566 79.72135      M  38 26.6\n70    Badruddeen 172.9889 60.29281      M  37 20.1\n71         Blake 175.4729 63.45875      M  25 20.6\n72       Michael 163.4561 58.07225      M  39 21.7\n73      Manuella 176.8755 70.50918      F  34 22.5\n74         Eliza 158.4561 34.13702      F  37 13.6\n75         Katie 147.7548 50.47963      F  34 23.1\n76          Joan 160.1891 46.59308      F  21 18.2\n77        Hasana 165.6633 37.71016      F  24 13.7\n78     Queenisha 170.1549 47.21380      F  25 16.3\n79        Alyssa 164.2040 72.39072      F  33 26.8\n80         April 166.2919 36.28761      F  31 13.1\n81          Musu 155.7780 51.83896      F  35 21.4\n82         Sarah 181.0950 34.55192      F  27 10.5\n83        Hannah 148.1705 54.88439      F  21 25.0\n84         Alina 156.2318 38.12627      F  38 15.6\n85       Wajeeha 156.8470 33.25690      F  25 13.5\n86        Leslie 160.5540 42.68231      F  38 16.6\n87       Saaliha 153.0666 50.46320      F  21 21.5\n88       Tahaani 141.8334 43.47029      F  29 21.6\n89        Rainey 182.5422 52.79097      F  31 15.8\n90        Alyssa 172.1579 62.05662      F  24 20.9\n91           Hae 169.3396 44.76316      F  28 15.6\n92      Sabriyya 158.7216 60.41923      F  31 24.0\n93       Kathryn 162.0836 61.23471      F  22 23.3\n94        Hayley 169.4214 43.50545      F  39 15.2\n95          Rubi 168.2295 51.72027      F  33 18.3\n96     Alexandra 174.9692 40.51046      F  37 13.2\n97           Ana 145.6248 35.12445      F  33 16.6\n98      Shayonna 173.2791 33.49761      F  37 11.2\n99        Daisha 153.9036 49.12283      F  27 20.7\n100        Peggy 169.4468 54.75503      F  22 19.1\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## **3.8 Data Information**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(New_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n     Name               Height          Weight      Gender      Age       \n Length:100         Min.   :141.8   Min.   :33.26   F:30   Min.   :20.00  \n Class :character   1st Qu.:164.2   1st Qu.:53.76   M:70   1st Qu.:25.00  \n Mode  :character   Median :171.9   Median :62.46          Median :31.00  \n                    Mean   :171.1   Mean   :62.89          Mean   :30.21  \n                    3rd Qu.:178.5   3rd Qu.:72.78          3rd Qu.:35.00  \n                    Max.   :198.8   Max.   :96.98          Max.   :40.00  \n      BMI       \n Min.   :10.50  \n 1st Qu.:18.38  \n Median :21.40  \n Mean   :21.48  \n 3rd Qu.:24.93  \n Max.   :33.70  \n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## **3.9 Data searching**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nNew_df%>%filter(BMI<13)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n      Name   Height   Weight Gender Age  BMI\n1    Sarah 181.0950 34.55192      F  27 10.5\n2 Shayonna 173.2791 33.49761      F  37 11.2\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nNew_df%>%filter(Height>190)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n     Name   Height   Weight Gender Age  BMI\n1   Tommy 190.4390 73.40946      M  34 20.2\n2  Daniel 194.5053 60.68860      M  25 16.0\n3  Jordan 198.7593 67.42554      M  21 17.1\n4   Jacob 193.8253 64.82768      M  26 17.3\n5 Saurabh 192.0460 76.51732      M  40 20.7\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nNew_df%>%filter(Age==28)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n     Name   Height   Weight Gender Age  BMI\n1  Sam Lu 177.0000 82.00000      M  28 26.2\n2 Gabriel 181.5490 62.28819      M  28 18.9\n3   Allen 176.4536 84.59021      M  28 27.2\n4  Joshua 175.1916 62.62665      M  28 20.4\n5     Hae 169.3396 44.76316      F  28 15.6\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n# **4 Statistics with R**\n\n------------------------------------------------------------------------\n\n## **4.1 One-sample Student's t Test**\n\n$$\nH_0: \\mu=170\n$$\n\n$$\nH_1: \\mu\\neq 170\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt.test(New_df$Height, mu=170)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n\n\tOne Sample t-test\n\ndata:  New_df$Height\nt = 0.9556, df = 99, p-value = 0.3416\nalternative hypothesis: true mean is not equal to 170\n95 percent confidence interval:\n 168.8563 173.2688\nsample estimates:\nmean of x \n 171.0625 \n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## **4.2 One-sample Student's t Test**\n\n$$\nH_0: \\mu=170\n$$\n\n$$\nH_1: \\mu> 170\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt.test(New_df$Height, mu=170, alternative = \"greater\") #alternative = \"less\", when H_0:\\mu<170\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n\n\tOne Sample t-test\n\ndata:  New_df$Height\nt = 0.9556, df = 99, p-value = 0.1708\nalternative hypothesis: true mean is greater than 170\n95 percent confidence interval:\n 169.2163      Inf\nsample estimates:\nmean of x \n 171.0625 \n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## **4.3 Two-sample Student's t Test**\n\n$$\nH_0: \\mu_1=\\mu_2\n$$\n\n$$\nH_1: \\mu_1<\\mu_2\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBMI_M <- New_df%>%filter(Gender==\"M\")\nBMI_M <- sample(BMI_M$BMI, 30, replace = F)\nBMI_F <- New_df%>%filter(Gender==\"F\")\nBMI_F <- BMI_F$BMI \n\n#test\nt.test(BMI_M, BMI_F, alternative = \"less\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n\n\tWelch Two Sample t-test\n\ndata:  BMI_M and BMI_F\nt = 3.7572, df = 57.764, p-value = 0.9998\nalternative hypothesis: true difference in means is less than 0\n95 percent confidence interval:\n     -Inf 5.818209\nsample estimates:\nmean of x mean of y \n 22.17333  18.14667 \n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n# **5 Model with R**\n\n------------------------------------------------------------------------\n\n## **5.1 Linear Model**\n\n$$\nY = \\beta_0+\\beta_1X+\\varepsilon\\;,\\;\\text{where }\\;\\varepsilon\\sim N(0,1)\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglm1 <- glm(Height~Weight, data = New_df)\nsummary(glm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n\nCall:\nglm(formula = Height ~ Weight, data = New_df)\n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 150.72221    4.57094  32.974  < 2e-16 ***\nWeight        0.32341    0.07086   4.564 1.46e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for gaussian family taken to be 103.0028)\n\n    Null deviance: 12240  on 99  degrees of freedom\nResidual deviance: 10094  on 98  degrees of freedom\nAIC: 751.24\n\nNumber of Fisher Scoring iterations: 2\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## **5.2 Regression Plot**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(plotly)\n\n\nest_beta <- glm1$coefficients\nNew_est <- data.frame(Height = est_beta[1]+est_beta[2]*New_df$Weight,\n                      Weight = New_df$Weight)\n\nplot_ly(New_df, x = ~Weight,\n        y = ~Height,\n        text = New_df$Name,\n        type = 'scatter',\n        alpha = 0.65,\n        mode = 'markers',\n        name = 'Weight-Height')%>%\n  add_trace(data = New_est,\n            x = ~Weight,\n            y = ~Height,\n            name = 'Regression Fit',\n            mode = 'lines')\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-f2c6a9be029defa9f2b0\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f2c6a9be029defa9f2b0\">{\"x\":{\"visdat\":{\"2d445c8d51a1\":[\"function () \",\"plotlyVisDat\"],\"2d44238e477b\":[\"function () \",\"data\"]},\"cur_data\":\"2d44238e477b\",\"attrs\":{\"2d445c8d51a1\":{\"x\":{},\"y\":{},\"text\":[\"Sam Lu\",\"Lan Huang\",\"Yuji Nishida\",\"Elaine Liao\",\"K'Yeir\",\"Todd\",\"Grayson\",\"Sean\",\"John Jack\",\"Arnold\",\"Alexander\",\"Martin\",\"Caleb\",\"Fahd\",\"Richard\",\"Maisoon\",\"Wyatt\",\"Gabriel\",\"Arjun\",\"Iyaad\",\"Krishnan\",\"Shannon\",\"Mateaki\",\"Troy\",\"Justin\",\"Tommy\",\"Francisco\",\"Aditya\",\"German\",\"Shabaan\",\"Josiah\",\"Robert\",\"Daniel\",\"Nicholas\",\"Ubaida\",\"Joseph\",\"Malik\",\"Justin\",\"Ross\",\"Darius\",\"Jordan\",\"Jacob\",\"Allen\",\"Samuel\",\"Cristian\",\"Charles\",\"David\",\"Joshua\",\"Junaid\",\"Addison\",\"Tyler\",\"Muntasir\",\"Kyle\",\"Idrees\",\"Saurabh\",\"Michael\",\"Brett\",\"Stephen\",\"Jawaad\",\"Joseph\",\"Kaalim\",\"Shaheed\",\"Hyun Seok\",\"Jonathan\",\"Evan\",\"Wilbert\",\"Joseph\",\"Daniel\",\"Rifaah\",\"Badruddeen\",\"Blake\",\"Michael\",\"Manuella\",\"Eliza\",\"Katie\",\"Joan\",\"Hasana\",\"Queenisha\",\"Alyssa\",\"April\",\"Musu\",\"Sarah\",\"Hannah\",\"Alina\",\"Wajeeha\",\"Leslie\",\"Saaliha\",\"Tahaani\",\"Rainey\",\"Alyssa\",\"Hae\",\"Sabriyya\",\"Kathryn\",\"Hayley\",\"Rubi\",\"Alexandra\",\"Ana\",\"Shayonna\",\"Daisha\",\"Peggy\"],\"mode\":\"markers\",\"name\":\"Weight-Height\",\"alpha\":0.65000000000000002,\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\"},\"2d44238e477b\":{\"x\":{},\"y\":{},\"text\":[\"Sam Lu\",\"Lan Huang\",\"Yuji Nishida\",\"Elaine Liao\",\"K'Yeir\",\"Todd\",\"Grayson\",\"Sean\",\"John Jack\",\"Arnold\",\"Alexander\",\"Martin\",\"Caleb\",\"Fahd\",\"Richard\",\"Maisoon\",\"Wyatt\",\"Gabriel\",\"Arjun\",\"Iyaad\",\"Krishnan\",\"Shannon\",\"Mateaki\",\"Troy\",\"Justin\",\"Tommy\",\"Francisco\",\"Aditya\",\"German\",\"Shabaan\",\"Josiah\",\"Robert\",\"Daniel\",\"Nicholas\",\"Ubaida\",\"Joseph\",\"Malik\",\"Justin\",\"Ross\",\"Darius\",\"Jordan\",\"Jacob\",\"Allen\",\"Samuel\",\"Cristian\",\"Charles\",\"David\",\"Joshua\",\"Junaid\",\"Addison\",\"Tyler\",\"Muntasir\",\"Kyle\",\"Idrees\",\"Saurabh\",\"Michael\",\"Brett\",\"Stephen\",\"Jawaad\",\"Joseph\",\"Kaalim\",\"Shaheed\",\"Hyun Seok\",\"Jonathan\",\"Evan\",\"Wilbert\",\"Joseph\",\"Daniel\",\"Rifaah\",\"Badruddeen\",\"Blake\",\"Michael\",\"Manuella\",\"Eliza\",\"Katie\",\"Joan\",\"Hasana\",\"Queenisha\",\"Alyssa\",\"April\",\"Musu\",\"Sarah\",\"Hannah\",\"Alina\",\"Wajeeha\",\"Leslie\",\"Saaliha\",\"Tahaani\",\"Rainey\",\"Alyssa\",\"Hae\",\"Sabriyya\",\"Kathryn\",\"Hayley\",\"Rubi\",\"Alexandra\",\"Ana\",\"Shayonna\",\"Daisha\",\"Peggy\"],\"mode\":\"lines\",\"name\":\"Regression Fit\",\"alpha\":0.65000000000000002,\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Weight\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Height\"},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[82,45,89,53,71.252599092181995,72.954876483756038,63.201193099467616,71.094091108829943,80.625682328234305,57.208702482802934,76.050737109042373,65.834159292909064,60.00731190394103,70.291656768381529,59.514508263360966,54.966649998413402,84.394110863633003,62.288191456249571,58.116023028630281,66.930429744984053,53.779957109445014,81.055584433326402,68.84616735974987,60.890210196982274,58.766395594139716,73.409464286355899,75.140236125735086,57.16677425873133,65.171941626845268,81.852841865755451,61.184638795306704,73.940882117351592,60.688602435645649,52.595002896981633,70.353740127756353,58.911154363010624,60.636310139153849,72.859162592621232,70.931852514476091,72.747766821196521,67.425544250146572,64.827680255206317,84.590205075927656,64.068048478232882,59.144882970503502,60.734559251596153,56.398373178251411,62.626652130901348,65.185502024778344,66.238094093122697,86.126387554703015,83.415024827956259,56.79889747373803,80.757420285613762,76.517323672050409,63.678792659214487,53.698647721136325,69.998096741558555,70.252521968771433,96.975412561936324,90.818307756024723,85.747589446215187,66.907124577802321,80.339597362549142,73.404760710566023,76.556159665357427,71.254102072391063,84.616177971157384,79.72134791982478,60.292807882472843,63.458748402900113,58.072252196169991,70.509176470842533,34.137021934241332,50.479627616413552,46.593076760633721,37.710157476206234,47.213796630283753,72.390717674424906,36.287614074575984,51.838959117505212,34.55191649590266,54.884392470599785,38.126269260285653,33.256900304533701,42.682314598853203,50.463199532140379,43.470294897086674,52.790967679054248,62.056624005540669,44.763157754306221,60.419229828542811,61.234709455704682,43.505450078870005,51.720266743408779,40.510463153493291,35.12444656225771,33.497610183757246,49.122825947300704,54.755032652633332],\"y\":[177,159,187,164,169.0641420284604,161.50811347387724,156.87905811689788,162.55166081315184,183.20028397341835,180.68109306135187,166.06150504694079,164.81901406542121,165.74435686398562,168.96658582350881,151.24884746625696,172.08688244587432,178.2968855424208,181.54903469239264,164.68293083760187,181.82771806747172,173.35510834640115,169.30244250279958,174.18577923597476,181.49945373432601,177.48322142655644,190.43904381443096,163.95452720169334,170.49739248172941,168.40809275004091,171.72169972494726,180.18596198385475,174.53923764936556,194.50532695855844,178.99810231760651,163.90132137664827,177.88062658277025,182.97575514686071,172.9407165423861,172.89699339108842,178.37331197989926,198.75933433179631,193.82530729541955,176.45363558246862,175.07938418672322,166.30764654522355,185.59820204444884,166.57959637868174,175.19157761979324,158.82539952029305,188.46333823431976,179.91281650644936,179.41494363509238,153.03403329352656,165.55939872087086,192.04603300757319,176.05756136613473,170.92675685017934,172.16399491794996,179.70925295995613,169.6817566467241,185.68642063809807,165.10971192168196,178.39618628823627,179.96377657864323,169.28917619990176,182.30908846798366,181.64797908260462,178.18939184210492,173.0565759211772,172.98888288311306,175.47287508561504,163.45611508536396,176.8755199277501,158.45613145945654,147.75476855582573,160.18906985065112,165.66332672251352,170.15486167229889,164.20395871622057,166.29194755760145,155.77802393014841,181.0949885430243,148.17048154190391,156.23181146015509,156.84700440628987,160.55401569307429,153.06660288659387,141.83340952961217,182.54215241551265,172.15791473594589,169.3396140659608,158.72160466202584,162.08364875847016,169.42135998614711,168.22949561008593,174.96915220446553,145.6247709193573,173.27912351694664,153.90357550040937,169.44682339287121],\"text\":[\"Sam Lu\",\"Lan Huang\",\"Yuji Nishida\",\"Elaine Liao\",\"K'Yeir\",\"Todd\",\"Grayson\",\"Sean\",\"John Jack\",\"Arnold\",\"Alexander\",\"Martin\",\"Caleb\",\"Fahd\",\"Richard\",\"Maisoon\",\"Wyatt\",\"Gabriel\",\"Arjun\",\"Iyaad\",\"Krishnan\",\"Shannon\",\"Mateaki\",\"Troy\",\"Justin\",\"Tommy\",\"Francisco\",\"Aditya\",\"German\",\"Shabaan\",\"Josiah\",\"Robert\",\"Daniel\",\"Nicholas\",\"Ubaida\",\"Joseph\",\"Malik\",\"Justin\",\"Ross\",\"Darius\",\"Jordan\",\"Jacob\",\"Allen\",\"Samuel\",\"Cristian\",\"Charles\",\"David\",\"Joshua\",\"Junaid\",\"Addison\",\"Tyler\",\"Muntasir\",\"Kyle\",\"Idrees\",\"Saurabh\",\"Michael\",\"Brett\",\"Stephen\",\"Jawaad\",\"Joseph\",\"Kaalim\",\"Shaheed\",\"Hyun Seok\",\"Jonathan\",\"Evan\",\"Wilbert\",\"Joseph\",\"Daniel\",\"Rifaah\",\"Badruddeen\",\"Blake\",\"Michael\",\"Manuella\",\"Eliza\",\"Katie\",\"Joan\",\"Hasana\",\"Queenisha\",\"Alyssa\",\"April\",\"Musu\",\"Sarah\",\"Hannah\",\"Alina\",\"Wajeeha\",\"Leslie\",\"Saaliha\",\"Tahaani\",\"Rainey\",\"Alyssa\",\"Hae\",\"Sabriyya\",\"Kathryn\",\"Hayley\",\"Rubi\",\"Alexandra\",\"Ana\",\"Shayonna\",\"Daisha\",\"Peggy\"],\"mode\":\"markers\",\"name\":\"Weight-Height\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(31,119,180,0.65)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,0.65)\"},\"error_x\":{\"color\":\"rgba(31,119,180,0.65)\"},\"line\":{\"color\":\"rgba(31,119,180,0.65)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[82,45,89,53,71.252599092181995,72.954876483756038,63.201193099467616,71.094091108829943,80.625682328234305,57.208702482802934,76.050737109042373,65.834159292909064,60.00731190394103,70.291656768381529,59.514508263360966,54.966649998413402,84.394110863633003,62.288191456249571,58.116023028630281,66.930429744984053,53.779957109445014,81.055584433326402,68.84616735974987,60.890210196982274,58.766395594139716,73.409464286355899,75.140236125735086,57.16677425873133,65.171941626845268,81.852841865755451,61.184638795306704,73.940882117351592,60.688602435645649,52.595002896981633,70.353740127756353,58.911154363010624,60.636310139153849,72.859162592621232,70.931852514476091,72.747766821196521,67.425544250146572,64.827680255206317,84.590205075927656,64.068048478232882,59.144882970503502,60.734559251596153,56.398373178251411,62.626652130901348,65.185502024778344,66.238094093122697,86.126387554703015,83.415024827956259,56.79889747373803,80.757420285613762,76.517323672050409,63.678792659214487,53.698647721136325,69.998096741558555,70.252521968771433,96.975412561936324,90.818307756024723,85.747589446215187,66.907124577802321,80.339597362549142,73.404760710566023,76.556159665357427,71.254102072391063,84.616177971157384,79.72134791982478,60.292807882472843,63.458748402900113,58.072252196169991,70.509176470842533,34.137021934241332,50.479627616413552,46.593076760633721,37.710157476206234,47.213796630283753,72.390717674424906,36.287614074575984,51.838959117505212,34.55191649590266,54.884392470599785,38.126269260285653,33.256900304533701,42.682314598853203,50.463199532140379,43.470294897086674,52.790967679054248,62.056624005540669,44.763157754306221,60.419229828542811,61.234709455704682,43.505450078870005,51.720266743408779,40.510463153493291,35.12444656225771,33.497610183757246,49.122825947300704,54.755032652633332],\"y\":[177.2415255853553,165.27549490629804,179.50536922733912,167.86274478285097,173.7657491263532,174.3162762477543,171.16187423126223,173.71448665630817,176.79706268202779,169.22386540523595,175.31749687532894,172.0133919136309,170.12895314015589,173.4549743877748,169.96957737037391,168.49877165355321,178.01579596490387,170.86660380767367,169.51729852650917,172.36793261260587,168.11498777474199,176.93609570306896,172.98749410101971,170.41448795261584,169.72763306898761,174.46329277727418,175.02303518074604,169.21030555616679,171.79922659178408,177.19393372727308,170.5097079969494,174.63515661697937,170.34928674566206,167.7317661947524,173.4750525332596,169.77444895734902,170.33237509095667,174.28532177862644,173.66201768340642,174.24929569164306,172.52805573040104,171.68789031787472,178.0792140557229,171.44222066522468,169.85003824620938,170.36414946646138,168.96179985608993,170.97606410001254,171.80361210901887,172.14402694637943,178.57602504679468,177.69915343678645,169.0913319103467,176.8396675587737,175.46839387877191,171.31633290651183,168.08869181163396,173.36003524487995,173.44231794959228,182.08466737313017,180.09342129200289,178.45351937686672,172.36039557624161,176.70454102050871,174.46177161153895,175.48095368113309,173.76623519952324,178.08761385196999,176.50459529621276,170.22128431955747,171.24516922213863,169.50314276639924,173.52532161569229,161.76234007384414,167.04764064056329,165.79070586283416,162.91791438507607,165.99145053859991,174.13382377152953,162.45785498004369,167.48725692286251,161.89651956177423,168.47216905621804,163.05248753032504,161.47770325161756,164.52594099779733,167.04232769568731,164.78077873896368,167.79514242703067,170.79171345039114,165.19889864743132,170.26216996510286,170.52590116069109,164.79214814392981,167.44887106908394,163.82355069981,162.08167935471172,161.55555032728083,166.60884252169839,168.43033328458495],\"text\":[\"Sam Lu\",\"Lan Huang\",\"Yuji Nishida\",\"Elaine Liao\",\"K'Yeir\",\"Todd\",\"Grayson\",\"Sean\",\"John Jack\",\"Arnold\",\"Alexander\",\"Martin\",\"Caleb\",\"Fahd\",\"Richard\",\"Maisoon\",\"Wyatt\",\"Gabriel\",\"Arjun\",\"Iyaad\",\"Krishnan\",\"Shannon\",\"Mateaki\",\"Troy\",\"Justin\",\"Tommy\",\"Francisco\",\"Aditya\",\"German\",\"Shabaan\",\"Josiah\",\"Robert\",\"Daniel\",\"Nicholas\",\"Ubaida\",\"Joseph\",\"Malik\",\"Justin\",\"Ross\",\"Darius\",\"Jordan\",\"Jacob\",\"Allen\",\"Samuel\",\"Cristian\",\"Charles\",\"David\",\"Joshua\",\"Junaid\",\"Addison\",\"Tyler\",\"Muntasir\",\"Kyle\",\"Idrees\",\"Saurabh\",\"Michael\",\"Brett\",\"Stephen\",\"Jawaad\",\"Joseph\",\"Kaalim\",\"Shaheed\",\"Hyun Seok\",\"Jonathan\",\"Evan\",\"Wilbert\",\"Joseph\",\"Daniel\",\"Rifaah\",\"Badruddeen\",\"Blake\",\"Michael\",\"Manuella\",\"Eliza\",\"Katie\",\"Joan\",\"Hasana\",\"Queenisha\",\"Alyssa\",\"April\",\"Musu\",\"Sarah\",\"Hannah\",\"Alina\",\"Wajeeha\",\"Leslie\",\"Saaliha\",\"Tahaani\",\"Rainey\",\"Alyssa\",\"Hae\",\"Sabriyya\",\"Kathryn\",\"Hayley\",\"Rubi\",\"Alexandra\",\"Ana\",\"Shayonna\",\"Daisha\",\"Peggy\"],\"mode\":\"lines\",\"name\":\"Regression Fit\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(255,127,14,0.65)\",\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"error_y\":{\"color\":\"rgba(255,127,14,0.65)\"},\"error_x\":{\"color\":\"rgba(255,127,14,0.65)\"},\"line\":{\"color\":\"rgba(255,127,14,0.65)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## **5.3 Regression Plot (Gender)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(plotly)\n\nest_beta <- glm1$coefficients\nNew_est <- data.frame(Height = est_beta[1]+est_beta[2]*New_df$Weight,\n                      Weight = New_df$Weight)\n\nplot_ly(New_df,\n        x = ~Weight,\n        y = ~Height,\n        text = New_df$Name,\n        color = ~New_df$Gender,\n        type = 'scatter',\n        alpha = 0.65, mode = 'markers',\n        name = 'Weight-Height')%>%\n  add_trace(data = New_est,\n            x = ~Weight,\n            y = ~Height,\n            name = 'Regression Fit',\n            mode = 'lines')\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-63f3107ec73b9d2acc82\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-63f3107ec73b9d2acc82\">{\"x\":{\"visdat\":{\"2d4418e977d2\":[\"function () \",\"plotlyVisDat\"],\"2d443f076b4a\":[\"function () \",\"data\"]},\"cur_data\":\"2d443f076b4a\",\"attrs\":{\"2d4418e977d2\":{\"x\":{},\"y\":{},\"text\":[\"Sam Lu\",\"Lan Huang\",\"Yuji Nishida\",\"Elaine Liao\",\"K'Yeir\",\"Todd\",\"Grayson\",\"Sean\",\"John Jack\",\"Arnold\",\"Alexander\",\"Martin\",\"Caleb\",\"Fahd\",\"Richard\",\"Maisoon\",\"Wyatt\",\"Gabriel\",\"Arjun\",\"Iyaad\",\"Krishnan\",\"Shannon\",\"Mateaki\",\"Troy\",\"Justin\",\"Tommy\",\"Francisco\",\"Aditya\",\"German\",\"Shabaan\",\"Josiah\",\"Robert\",\"Daniel\",\"Nicholas\",\"Ubaida\",\"Joseph\",\"Malik\",\"Justin\",\"Ross\",\"Darius\",\"Jordan\",\"Jacob\",\"Allen\",\"Samuel\",\"Cristian\",\"Charles\",\"David\",\"Joshua\",\"Junaid\",\"Addison\",\"Tyler\",\"Muntasir\",\"Kyle\",\"Idrees\",\"Saurabh\",\"Michael\",\"Brett\",\"Stephen\",\"Jawaad\",\"Joseph\",\"Kaalim\",\"Shaheed\",\"Hyun Seok\",\"Jonathan\",\"Evan\",\"Wilbert\",\"Joseph\",\"Daniel\",\"Rifaah\",\"Badruddeen\",\"Blake\",\"Michael\",\"Manuella\",\"Eliza\",\"Katie\",\"Joan\",\"Hasana\",\"Queenisha\",\"Alyssa\",\"April\",\"Musu\",\"Sarah\",\"Hannah\",\"Alina\",\"Wajeeha\",\"Leslie\",\"Saaliha\",\"Tahaani\",\"Rainey\",\"Alyssa\",\"Hae\",\"Sabriyya\",\"Kathryn\",\"Hayley\",\"Rubi\",\"Alexandra\",\"Ana\",\"Shayonna\",\"Daisha\",\"Peggy\"],\"mode\":\"markers\",\"name\":\"Weight-Height\",\"color\":{},\"alpha\":0.65000000000000002,\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\"},\"2d443f076b4a\":{\"x\":{},\"y\":{},\"text\":[\"Sam Lu\",\"Lan Huang\",\"Yuji Nishida\",\"Elaine Liao\",\"K'Yeir\",\"Todd\",\"Grayson\",\"Sean\",\"John Jack\",\"Arnold\",\"Alexander\",\"Martin\",\"Caleb\",\"Fahd\",\"Richard\",\"Maisoon\",\"Wyatt\",\"Gabriel\",\"Arjun\",\"Iyaad\",\"Krishnan\",\"Shannon\",\"Mateaki\",\"Troy\",\"Justin\",\"Tommy\",\"Francisco\",\"Aditya\",\"German\",\"Shabaan\",\"Josiah\",\"Robert\",\"Daniel\",\"Nicholas\",\"Ubaida\",\"Joseph\",\"Malik\",\"Justin\",\"Ross\",\"Darius\",\"Jordan\",\"Jacob\",\"Allen\",\"Samuel\",\"Cristian\",\"Charles\",\"David\",\"Joshua\",\"Junaid\",\"Addison\",\"Tyler\",\"Muntasir\",\"Kyle\",\"Idrees\",\"Saurabh\",\"Michael\",\"Brett\",\"Stephen\",\"Jawaad\",\"Joseph\",\"Kaalim\",\"Shaheed\",\"Hyun Seok\",\"Jonathan\",\"Evan\",\"Wilbert\",\"Joseph\",\"Daniel\",\"Rifaah\",\"Badruddeen\",\"Blake\",\"Michael\",\"Manuella\",\"Eliza\",\"Katie\",\"Joan\",\"Hasana\",\"Queenisha\",\"Alyssa\",\"April\",\"Musu\",\"Sarah\",\"Hannah\",\"Alina\",\"Wajeeha\",\"Leslie\",\"Saaliha\",\"Tahaani\",\"Rainey\",\"Alyssa\",\"Hae\",\"Sabriyya\",\"Kathryn\",\"Hayley\",\"Rubi\",\"Alexandra\",\"Ana\",\"Shayonna\",\"Daisha\",\"Peggy\"],\"mode\":\"lines\",\"name\":\"Regression Fit\",\"color\":{},\"alpha\":0.65000000000000002,\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Weight\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Height\"},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[45,53,70.509176470842533,34.137021934241332,50.479627616413552,46.593076760633721,37.710157476206234,47.213796630283753,72.390717674424906,36.287614074575984,51.838959117505212,34.55191649590266,54.884392470599785,38.126269260285653,33.256900304533701,42.682314598853203,50.463199532140379,43.470294897086674,52.790967679054248,62.056624005540669,44.763157754306221,60.419229828542811,61.234709455704682,43.505450078870005,51.720266743408779,40.510463153493291,35.12444656225771,33.497610183757246,49.122825947300704,54.755032652633332],\"y\":[159,164,176.8755199277501,158.45613145945654,147.75476855582573,160.18906985065112,165.66332672251352,170.15486167229889,164.20395871622057,166.29194755760145,155.77802393014841,181.0949885430243,148.17048154190391,156.23181146015509,156.84700440628987,160.55401569307429,153.06660288659387,141.83340952961217,182.54215241551265,172.15791473594589,169.3396140659608,158.72160466202584,162.08364875847016,169.42135998614711,168.22949561008593,174.96915220446553,145.6247709193573,173.27912351694664,153.90357550040937,169.44682339287121],\"text\":[\"Lan Huang\",\"Elaine Liao\",\"Manuella\",\"Eliza\",\"Katie\",\"Joan\",\"Hasana\",\"Queenisha\",\"Alyssa\",\"April\",\"Musu\",\"Sarah\",\"Hannah\",\"Alina\",\"Wajeeha\",\"Leslie\",\"Saaliha\",\"Tahaani\",\"Rainey\",\"Alyssa\",\"Hae\",\"Sabriyya\",\"Kathryn\",\"Hayley\",\"Rubi\",\"Alexandra\",\"Ana\",\"Shayonna\",\"Daisha\",\"Peggy\"],\"mode\":\"markers\",\"name\":\"Weight-Height\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(102,194,165,0.65)\",\"line\":{\"color\":\"rgba(102,194,165,1)\"}},\"textfont\":{\"color\":\"rgba(102,194,165,0.65)\"},\"error_y\":{\"color\":\"rgba(102,194,165,0.65)\"},\"error_x\":{\"color\":\"rgba(102,194,165,0.65)\"},\"line\":{\"color\":\"rgba(102,194,165,0.65)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[82,89,71.252599092181995,72.954876483756038,63.201193099467616,71.094091108829943,80.625682328234305,57.208702482802934,76.050737109042373,65.834159292909064,60.00731190394103,70.291656768381529,59.514508263360966,54.966649998413402,84.394110863633003,62.288191456249571,58.116023028630281,66.930429744984053,53.779957109445014,81.055584433326402,68.84616735974987,60.890210196982274,58.766395594139716,73.409464286355899,75.140236125735086,57.16677425873133,65.171941626845268,81.852841865755451,61.184638795306704,73.940882117351592,60.688602435645649,52.595002896981633,70.353740127756353,58.911154363010624,60.636310139153849,72.859162592621232,70.931852514476091,72.747766821196521,67.425544250146572,64.827680255206317,84.590205075927656,64.068048478232882,59.144882970503502,60.734559251596153,56.398373178251411,62.626652130901348,65.185502024778344,66.238094093122697,86.126387554703015,83.415024827956259,56.79889747373803,80.757420285613762,76.517323672050409,63.678792659214487,53.698647721136325,69.998096741558555,70.252521968771433,96.975412561936324,90.818307756024723,85.747589446215187,66.907124577802321,80.339597362549142,73.404760710566023,76.556159665357427,71.254102072391063,84.616177971157384,79.72134791982478,60.292807882472843,63.458748402900113,58.072252196169991],\"y\":[177,187,169.0641420284604,161.50811347387724,156.87905811689788,162.55166081315184,183.20028397341835,180.68109306135187,166.06150504694079,164.81901406542121,165.74435686398562,168.96658582350881,151.24884746625696,172.08688244587432,178.2968855424208,181.54903469239264,164.68293083760187,181.82771806747172,173.35510834640115,169.30244250279958,174.18577923597476,181.49945373432601,177.48322142655644,190.43904381443096,163.95452720169334,170.49739248172941,168.40809275004091,171.72169972494726,180.18596198385475,174.53923764936556,194.50532695855844,178.99810231760651,163.90132137664827,177.88062658277025,182.97575514686071,172.9407165423861,172.89699339108842,178.37331197989926,198.75933433179631,193.82530729541955,176.45363558246862,175.07938418672322,166.30764654522355,185.59820204444884,166.57959637868174,175.19157761979324,158.82539952029305,188.46333823431976,179.91281650644936,179.41494363509238,153.03403329352656,165.55939872087086,192.04603300757319,176.05756136613473,170.92675685017934,172.16399491794996,179.70925295995613,169.6817566467241,185.68642063809807,165.10971192168196,178.39618628823627,179.96377657864323,169.28917619990176,182.30908846798366,181.64797908260462,178.18939184210492,173.0565759211772,172.98888288311306,175.47287508561504,163.45611508536396],\"text\":[\"Sam Lu\",\"Yuji Nishida\",\"K'Yeir\",\"Todd\",\"Grayson\",\"Sean\",\"John Jack\",\"Arnold\",\"Alexander\",\"Martin\",\"Caleb\",\"Fahd\",\"Richard\",\"Maisoon\",\"Wyatt\",\"Gabriel\",\"Arjun\",\"Iyaad\",\"Krishnan\",\"Shannon\",\"Mateaki\",\"Troy\",\"Justin\",\"Tommy\",\"Francisco\",\"Aditya\",\"German\",\"Shabaan\",\"Josiah\",\"Robert\",\"Daniel\",\"Nicholas\",\"Ubaida\",\"Joseph\",\"Malik\",\"Justin\",\"Ross\",\"Darius\",\"Jordan\",\"Jacob\",\"Allen\",\"Samuel\",\"Cristian\",\"Charles\",\"David\",\"Joshua\",\"Junaid\",\"Addison\",\"Tyler\",\"Muntasir\",\"Kyle\",\"Idrees\",\"Saurabh\",\"Michael\",\"Brett\",\"Stephen\",\"Jawaad\",\"Joseph\",\"Kaalim\",\"Shaheed\",\"Hyun Seok\",\"Jonathan\",\"Evan\",\"Wilbert\",\"Joseph\",\"Daniel\",\"Rifaah\",\"Badruddeen\",\"Blake\",\"Michael\"],\"mode\":\"markers\",\"name\":\"Weight-Height\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(141,160,203,0.65)\",\"line\":{\"color\":\"rgba(141,160,203,1)\"}},\"textfont\":{\"color\":\"rgba(141,160,203,0.65)\"},\"error_y\":{\"color\":\"rgba(141,160,203,0.65)\"},\"error_x\":{\"color\":\"rgba(141,160,203,0.65)\"},\"line\":{\"color\":\"rgba(141,160,203,0.65)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[45,53,70.509176470842533,34.137021934241332,50.479627616413552,46.593076760633721,37.710157476206234,47.213796630283753,72.390717674424906,36.287614074575984,51.838959117505212,34.55191649590266,54.884392470599785,38.126269260285653,33.256900304533701,42.682314598853203,50.463199532140379,43.470294897086674,52.790967679054248,62.056624005540669,44.763157754306221,60.419229828542811,61.234709455704682,43.505450078870005,51.720266743408779,40.510463153493291,35.12444656225771,33.497610183757246,49.122825947300704,54.755032652633332],\"y\":[165.27549490629804,167.86274478285097,173.52532161569229,161.76234007384414,167.04764064056329,165.79070586283416,162.91791438507607,165.99145053859991,174.13382377152953,162.45785498004369,167.48725692286251,161.89651956177423,168.47216905621804,163.05248753032504,161.47770325161756,164.52594099779733,167.04232769568731,164.78077873896368,167.79514242703067,170.79171345039114,165.19889864743132,170.26216996510286,170.52590116069109,164.79214814392981,167.44887106908394,163.82355069981,162.08167935471172,161.55555032728083,166.60884252169839,168.43033328458495],\"text\":[\"Lan Huang\",\"Elaine Liao\",\"Manuella\",\"Eliza\",\"Katie\",\"Joan\",\"Hasana\",\"Queenisha\",\"Alyssa\",\"April\",\"Musu\",\"Sarah\",\"Hannah\",\"Alina\",\"Wajeeha\",\"Leslie\",\"Saaliha\",\"Tahaani\",\"Rainey\",\"Alyssa\",\"Hae\",\"Sabriyya\",\"Kathryn\",\"Hayley\",\"Rubi\",\"Alexandra\",\"Ana\",\"Shayonna\",\"Daisha\",\"Peggy\"],\"mode\":\"lines\",\"name\":\"Regression Fit\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(102,194,165,0.65)\",\"line\":{\"color\":\"rgba(102,194,165,1)\"}},\"textfont\":{\"color\":\"rgba(102,194,165,0.65)\"},\"error_y\":{\"color\":\"rgba(102,194,165,0.65)\"},\"error_x\":{\"color\":\"rgba(102,194,165,0.65)\"},\"line\":{\"color\":\"rgba(102,194,165,0.65)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[82,89,71.252599092181995,72.954876483756038,63.201193099467616,71.094091108829943,80.625682328234305,57.208702482802934,76.050737109042373,65.834159292909064,60.00731190394103,70.291656768381529,59.514508263360966,54.966649998413402,84.394110863633003,62.288191456249571,58.116023028630281,66.930429744984053,53.779957109445014,81.055584433326402,68.84616735974987,60.890210196982274,58.766395594139716,73.409464286355899,75.140236125735086,57.16677425873133,65.171941626845268,81.852841865755451,61.184638795306704,73.940882117351592,60.688602435645649,52.595002896981633,70.353740127756353,58.911154363010624,60.636310139153849,72.859162592621232,70.931852514476091,72.747766821196521,67.425544250146572,64.827680255206317,84.590205075927656,64.068048478232882,59.144882970503502,60.734559251596153,56.398373178251411,62.626652130901348,65.185502024778344,66.238094093122697,86.126387554703015,83.415024827956259,56.79889747373803,80.757420285613762,76.517323672050409,63.678792659214487,53.698647721136325,69.998096741558555,70.252521968771433,96.975412561936324,90.818307756024723,85.747589446215187,66.907124577802321,80.339597362549142,73.404760710566023,76.556159665357427,71.254102072391063,84.616177971157384,79.72134791982478,60.292807882472843,63.458748402900113,58.072252196169991],\"y\":[177.2415255853553,179.50536922733912,173.7657491263532,174.3162762477543,171.16187423126223,173.71448665630817,176.79706268202779,169.22386540523595,175.31749687532894,172.0133919136309,170.12895314015589,173.4549743877748,169.96957737037391,168.49877165355321,178.01579596490387,170.86660380767367,169.51729852650917,172.36793261260587,168.11498777474199,176.93609570306896,172.98749410101971,170.41448795261584,169.72763306898761,174.46329277727418,175.02303518074604,169.21030555616679,171.79922659178408,177.19393372727308,170.5097079969494,174.63515661697937,170.34928674566206,167.7317661947524,173.4750525332596,169.77444895734902,170.33237509095667,174.28532177862644,173.66201768340642,174.24929569164306,172.52805573040104,171.68789031787472,178.0792140557229,171.44222066522468,169.85003824620938,170.36414946646138,168.96179985608993,170.97606410001254,171.80361210901887,172.14402694637943,178.57602504679468,177.69915343678645,169.0913319103467,176.8396675587737,175.46839387877191,171.31633290651183,168.08869181163396,173.36003524487995,173.44231794959228,182.08466737313017,180.09342129200289,178.45351937686672,172.36039557624161,176.70454102050871,174.46177161153895,175.48095368113309,173.76623519952324,178.08761385196999,176.50459529621276,170.22128431955747,171.24516922213863,169.50314276639924],\"text\":[\"Sam Lu\",\"Yuji Nishida\",\"K'Yeir\",\"Todd\",\"Grayson\",\"Sean\",\"John Jack\",\"Arnold\",\"Alexander\",\"Martin\",\"Caleb\",\"Fahd\",\"Richard\",\"Maisoon\",\"Wyatt\",\"Gabriel\",\"Arjun\",\"Iyaad\",\"Krishnan\",\"Shannon\",\"Mateaki\",\"Troy\",\"Justin\",\"Tommy\",\"Francisco\",\"Aditya\",\"German\",\"Shabaan\",\"Josiah\",\"Robert\",\"Daniel\",\"Nicholas\",\"Ubaida\",\"Joseph\",\"Malik\",\"Justin\",\"Ross\",\"Darius\",\"Jordan\",\"Jacob\",\"Allen\",\"Samuel\",\"Cristian\",\"Charles\",\"David\",\"Joshua\",\"Junaid\",\"Addison\",\"Tyler\",\"Muntasir\",\"Kyle\",\"Idrees\",\"Saurabh\",\"Michael\",\"Brett\",\"Stephen\",\"Jawaad\",\"Joseph\",\"Kaalim\",\"Shaheed\",\"Hyun Seok\",\"Jonathan\",\"Evan\",\"Wilbert\",\"Joseph\",\"Daniel\",\"Rifaah\",\"Badruddeen\",\"Blake\",\"Michael\"],\"mode\":\"lines\",\"name\":\"Regression Fit\",\"type\":\"scatter\",\"marker\":{\"color\":\"rgba(141,160,203,0.65)\",\"line\":{\"color\":\"rgba(141,160,203,1)\"}},\"textfont\":{\"color\":\"rgba(141,160,203,0.65)\"},\"error_y\":{\"color\":\"rgba(141,160,203,0.65)\"},\"error_x\":{\"color\":\"rgba(141,160,203,0.65)\"},\"line\":{\"color\":\"rgba(141,160,203,0.65)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## **5.4 Regression Plot (Age)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(plotly)\n\nest_beta <- glm1$coefficients\nNew_est <- data.frame(Height = est_beta[1]+est_beta[2]*New_df$Weight,\n                      Weight = New_df$Weight)\n\nplot_ly(New_df, x = ~Weight,\n        y = ~Height,\n        text = New_df$Name,\n        color = ~New_df$Age,\n        type = 'scatter',\n        alpha = 0.65,\n        mode = 'markers',\n        name = 'Weight-Height')%>%\n  add_trace(data = New_est,\n            x = ~Weight,\n            y = ~Height,\n            name = 'Regression Fit',\n            mode = 'lines')\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-0a873e997ccdba215570\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-0a873e997ccdba215570\">{\"x\":{\"visdat\":{\"2d446ceb5dba\":[\"function () \",\"plotlyVisDat\"],\"2d442c6d7722\":[\"function () \",\"data\"]},\"cur_data\":\"2d442c6d7722\",\"attrs\":{\"2d446ceb5dba\":{\"x\":{},\"y\":{},\"text\":[\"Sam Lu\",\"Lan Huang\",\"Yuji Nishida\",\"Elaine Liao\",\"K'Yeir\",\"Todd\",\"Grayson\",\"Sean\",\"John Jack\",\"Arnold\",\"Alexander\",\"Martin\",\"Caleb\",\"Fahd\",\"Richard\",\"Maisoon\",\"Wyatt\",\"Gabriel\",\"Arjun\",\"Iyaad\",\"Krishnan\",\"Shannon\",\"Mateaki\",\"Troy\",\"Justin\",\"Tommy\",\"Francisco\",\"Aditya\",\"German\",\"Shabaan\",\"Josiah\",\"Robert\",\"Daniel\",\"Nicholas\",\"Ubaida\",\"Joseph\",\"Malik\",\"Justin\",\"Ross\",\"Darius\",\"Jordan\",\"Jacob\",\"Allen\",\"Samuel\",\"Cristian\",\"Charles\",\"David\",\"Joshua\",\"Junaid\",\"Addison\",\"Tyler\",\"Muntasir\",\"Kyle\",\"Idrees\",\"Saurabh\",\"Michael\",\"Brett\",\"Stephen\",\"Jawaad\",\"Joseph\",\"Kaalim\",\"Shaheed\",\"Hyun Seok\",\"Jonathan\",\"Evan\",\"Wilbert\",\"Joseph\",\"Daniel\",\"Rifaah\",\"Badruddeen\",\"Blake\",\"Michael\",\"Manuella\",\"Eliza\",\"Katie\",\"Joan\",\"Hasana\",\"Queenisha\",\"Alyssa\",\"April\",\"Musu\",\"Sarah\",\"Hannah\",\"Alina\",\"Wajeeha\",\"Leslie\",\"Saaliha\",\"Tahaani\",\"Rainey\",\"Alyssa\",\"Hae\",\"Sabriyya\",\"Kathryn\",\"Hayley\",\"Rubi\",\"Alexandra\",\"Ana\",\"Shayonna\",\"Daisha\",\"Peggy\"],\"mode\":\"markers\",\"name\":\"Weight-Height\",\"color\":{},\"alpha\":0.65000000000000002,\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\"},\"2d442c6d7722\":{\"x\":{},\"y\":{},\"text\":[\"Sam Lu\",\"Lan Huang\",\"Yuji Nishida\",\"Elaine Liao\",\"K'Yeir\",\"Todd\",\"Grayson\",\"Sean\",\"John Jack\",\"Arnold\",\"Alexander\",\"Martin\",\"Caleb\",\"Fahd\",\"Richard\",\"Maisoon\",\"Wyatt\",\"Gabriel\",\"Arjun\",\"Iyaad\",\"Krishnan\",\"Shannon\",\"Mateaki\",\"Troy\",\"Justin\",\"Tommy\",\"Francisco\",\"Aditya\",\"German\",\"Shabaan\",\"Josiah\",\"Robert\",\"Daniel\",\"Nicholas\",\"Ubaida\",\"Joseph\",\"Malik\",\"Justin\",\"Ross\",\"Darius\",\"Jordan\",\"Jacob\",\"Allen\",\"Samuel\",\"Cristian\",\"Charles\",\"David\",\"Joshua\",\"Junaid\",\"Addison\",\"Tyler\",\"Muntasir\",\"Kyle\",\"Idrees\",\"Saurabh\",\"Michael\",\"Brett\",\"Stephen\",\"Jawaad\",\"Joseph\",\"Kaalim\",\"Shaheed\",\"Hyun Seok\",\"Jonathan\",\"Evan\",\"Wilbert\",\"Joseph\",\"Daniel\",\"Rifaah\",\"Badruddeen\",\"Blake\",\"Michael\",\"Manuella\",\"Eliza\",\"Katie\",\"Joan\",\"Hasana\",\"Queenisha\",\"Alyssa\",\"April\",\"Musu\",\"Sarah\",\"Hannah\",\"Alina\",\"Wajeeha\",\"Leslie\",\"Saaliha\",\"Tahaani\",\"Rainey\",\"Alyssa\",\"Hae\",\"Sabriyya\",\"Kathryn\",\"Hayley\",\"Rubi\",\"Alexandra\",\"Ana\",\"Shayonna\",\"Daisha\",\"Peggy\"],\"mode\":\"lines\",\"name\":\"Regression Fit\",\"color\":{},\"alpha\":0.65000000000000002,\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Weight\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Height\"},\"hovermode\":\"closest\",\"showlegend\":true,\"legend\":{\"yanchor\":\"top\",\"y\":0.5}},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[82,45,89,53,71.252599092181995,72.954876483756038,63.201193099467616,71.094091108829943,80.625682328234305,57.208702482802934,76.050737109042373,65.834159292909064,60.00731190394103,70.291656768381529,59.514508263360966,54.966649998413402,84.394110863633003,62.288191456249571,58.116023028630281,66.930429744984053,53.779957109445014,81.055584433326402,68.84616735974987,60.890210196982274,58.766395594139716,73.409464286355899,75.140236125735086,57.16677425873133,65.171941626845268,81.852841865755451,61.184638795306704,73.940882117351592,60.688602435645649,52.595002896981633,70.353740127756353,58.911154363010624,60.636310139153849,72.859162592621232,70.931852514476091,72.747766821196521,67.425544250146572,64.827680255206317,84.590205075927656,64.068048478232882,59.144882970503502,60.734559251596153,56.398373178251411,62.626652130901348,65.185502024778344,66.238094093122697,86.126387554703015,83.415024827956259,56.79889747373803,80.757420285613762,76.517323672050409,63.678792659214487,53.698647721136325,69.998096741558555,70.252521968771433,96.975412561936324,90.818307756024723,85.747589446215187,66.907124577802321,80.339597362549142,73.404760710566023,76.556159665357427,71.254102072391063,84.616177971157384,79.72134791982478,60.292807882472843,63.458748402900113,58.072252196169991,70.509176470842533,34.137021934241332,50.479627616413552,46.593076760633721,37.710157476206234,47.213796630283753,72.390717674424906,36.287614074575984,51.838959117505212,34.55191649590266,54.884392470599785,38.126269260285653,33.256900304533701,42.682314598853203,50.463199532140379,43.470294897086674,52.790967679054248,62.056624005540669,44.763157754306221,60.419229828542811,61.234709455704682,43.505450078870005,51.720266743408779,40.510463153493291,35.12444656225771,33.497610183757246,49.122825947300704,54.755032652633332],\"y\":[177,159,187,164,169.0641420284604,161.50811347387724,156.87905811689788,162.55166081315184,183.20028397341835,180.68109306135187,166.06150504694079,164.81901406542121,165.74435686398562,168.96658582350881,151.24884746625696,172.08688244587432,178.2968855424208,181.54903469239264,164.68293083760187,181.82771806747172,173.35510834640115,169.30244250279958,174.18577923597476,181.49945373432601,177.48322142655644,190.43904381443096,163.95452720169334,170.49739248172941,168.40809275004091,171.72169972494726,180.18596198385475,174.53923764936556,194.50532695855844,178.99810231760651,163.90132137664827,177.88062658277025,182.97575514686071,172.9407165423861,172.89699339108842,178.37331197989926,198.75933433179631,193.82530729541955,176.45363558246862,175.07938418672322,166.30764654522355,185.59820204444884,166.57959637868174,175.19157761979324,158.82539952029305,188.46333823431976,179.91281650644936,179.41494363509238,153.03403329352656,165.55939872087086,192.04603300757319,176.05756136613473,170.92675685017934,172.16399491794996,179.70925295995613,169.6817566467241,185.68642063809807,165.10971192168196,178.39618628823627,179.96377657864323,169.28917619990176,182.30908846798366,181.64797908260462,178.18939184210492,173.0565759211772,172.98888288311306,175.47287508561504,163.45611508536396,176.8755199277501,158.45613145945654,147.75476855582573,160.18906985065112,165.66332672251352,170.15486167229889,164.20395871622057,166.29194755760145,155.77802393014841,181.0949885430243,148.17048154190391,156.23181146015509,156.84700440628987,160.55401569307429,153.06660288659387,141.83340952961217,182.54215241551265,172.15791473594589,169.3396140659608,158.72160466202584,162.08364875847016,169.42135998614711,168.22949561008593,174.96915220446553,145.6247709193573,173.27912351694664,153.90357550040937,169.44682339287121],\"text\":[\"Sam Lu\",\"Lan Huang\",\"Yuji Nishida\",\"Elaine Liao\",\"K'Yeir\",\"Todd\",\"Grayson\",\"Sean\",\"John Jack\",\"Arnold\",\"Alexander\",\"Martin\",\"Caleb\",\"Fahd\",\"Richard\",\"Maisoon\",\"Wyatt\",\"Gabriel\",\"Arjun\",\"Iyaad\",\"Krishnan\",\"Shannon\",\"Mateaki\",\"Troy\",\"Justin\",\"Tommy\",\"Francisco\",\"Aditya\",\"German\",\"Shabaan\",\"Josiah\",\"Robert\",\"Daniel\",\"Nicholas\",\"Ubaida\",\"Joseph\",\"Malik\",\"Justin\",\"Ross\",\"Darius\",\"Jordan\",\"Jacob\",\"Allen\",\"Samuel\",\"Cristian\",\"Charles\",\"David\",\"Joshua\",\"Junaid\",\"Addison\",\"Tyler\",\"Muntasir\",\"Kyle\",\"Idrees\",\"Saurabh\",\"Michael\",\"Brett\",\"Stephen\",\"Jawaad\",\"Joseph\",\"Kaalim\",\"Shaheed\",\"Hyun Seok\",\"Jonathan\",\"Evan\",\"Wilbert\",\"Joseph\",\"Daniel\",\"Rifaah\",\"Badruddeen\",\"Blake\",\"Michael\",\"Manuella\",\"Eliza\",\"Katie\",\"Joan\",\"Hasana\",\"Queenisha\",\"Alyssa\",\"April\",\"Musu\",\"Sarah\",\"Hannah\",\"Alina\",\"Wajeeha\",\"Leslie\",\"Saaliha\",\"Tahaani\",\"Rainey\",\"Alyssa\",\"Hae\",\"Sabriyya\",\"Kathryn\",\"Hayley\",\"Rubi\",\"Alexandra\",\"Ana\",\"Shayonna\",\"Daisha\",\"Peggy\"],\"mode\":\"markers\",\"name\":\"Weight-Height\",\"type\":\"scatter\",\"marker\":{\"colorbar\":{\"title\":\"New_df$Age<br />New_df$Age\",\"ticklen\":2},\"cmin\":20,\"cmax\":40,\"colorscale\":[[\"0\",\"rgba(68,1,84,0.65)\"],[\"0.0416666666666666\",\"rgba(70,19,97,0.65)\"],[\"0.0833333333333334\",\"rgba(72,32,111,0.65)\"],[\"0.125\",\"rgba(71,45,122,0.65)\"],[\"0.166666666666667\",\"rgba(68,58,128,0.65)\"],[\"0.208333333333333\",\"rgba(64,70,135,0.65)\"],[\"0.25\",\"rgba(60,82,138,0.65)\"],[\"0.291666666666667\",\"rgba(56,93,140,0.65)\"],[\"0.333333333333333\",\"rgba(49,104,142,0.65)\"],[\"0.375\",\"rgba(46,114,142,0.65)\"],[\"0.416666666666667\",\"rgba(42,123,142,0.65)\"],[\"0.458333333333333\",\"rgba(38,133,141,0.65)\"],[\"0.5\",\"rgba(37,144,140,0.65)\"],[\"0.541666666666667\",\"rgba(33,154,138,0.65)\"],[\"0.583333333333333\",\"rgba(39,164,133,0.65)\"],[\"0.625\",\"rgba(47,174,127,0.65)\"],[\"0.666666666666667\",\"rgba(53,183,121,0.65)\"],[\"0.708333333333334\",\"rgba(79,191,110,0.65)\"],[\"0.75\",\"rgba(98,199,98,0.65)\"],[\"0.791666666666667\",\"rgba(119,207,85,0.65)\"],[\"0.833333333333334\",\"rgba(147,214,70,0.65)\"],[\"0.875\",\"rgba(172,220,52,0.65)\"],[\"0.916666666666667\",\"rgba(199,225,42,0.65)\"],[\"0.958333333333334\",\"rgba(226,228,40,0.65)\"],[\"1\",\"rgba(253,231,37,0.65)\"]],\"showscale\":false,\"color\":[28,21,24,27,24,24,23,21,27,36,32,27,22,26,27,40,25,28,34,40,35,25,21,30,32,34,40,24,36,34,40,35,25,32,34,27,33,30,35,36,21,26,28,32,31,31,37,28,22,26,31,27,20,27,40,37,33,34,40,22,37,34,37,30,24,30,35,31,38,37,25,39,34,37,34,21,24,25,33,31,35,27,21,38,25,38,21,29,31,24,28,31,22,39,33,37,33,37,27,22],\"line\":{\"colorbar\":{\"title\":\"\",\"ticklen\":2},\"cmin\":20,\"cmax\":40,\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666666\",\"rgba(70,19,97,1)\"],[\"0.0833333333333334\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333334\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333334\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333334\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":false,\"color\":[28,21,24,27,24,24,23,21,27,36,32,27,22,26,27,40,25,28,34,40,35,25,21,30,32,34,40,24,36,34,40,35,25,32,34,27,33,30,35,36,21,26,28,32,31,31,37,28,22,26,31,27,20,27,40,37,33,34,40,22,37,34,37,30,24,30,35,31,38,37,25,39,34,37,34,21,24,25,33,31,35,27,21,38,25,38,21,29,31,24,28,31,22,39,33,37,33,37,27,22]}},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[82,45,89,53,71.252599092181995,72.954876483756038,63.201193099467616,71.094091108829943,80.625682328234305,57.208702482802934,76.050737109042373,65.834159292909064,60.00731190394103,70.291656768381529,59.514508263360966,54.966649998413402,84.394110863633003,62.288191456249571,58.116023028630281,66.930429744984053,53.779957109445014,81.055584433326402,68.84616735974987,60.890210196982274,58.766395594139716,73.409464286355899,75.140236125735086,57.16677425873133,65.171941626845268,81.852841865755451,61.184638795306704,73.940882117351592,60.688602435645649,52.595002896981633,70.353740127756353,58.911154363010624,60.636310139153849,72.859162592621232,70.931852514476091,72.747766821196521,67.425544250146572,64.827680255206317,84.590205075927656,64.068048478232882,59.144882970503502,60.734559251596153,56.398373178251411,62.626652130901348,65.185502024778344,66.238094093122697,86.126387554703015,83.415024827956259,56.79889747373803,80.757420285613762,76.517323672050409,63.678792659214487,53.698647721136325,69.998096741558555,70.252521968771433,96.975412561936324,90.818307756024723,85.747589446215187,66.907124577802321,80.339597362549142,73.404760710566023,76.556159665357427,71.254102072391063,84.616177971157384,79.72134791982478,60.292807882472843,63.458748402900113,58.072252196169991,70.509176470842533,34.137021934241332,50.479627616413552,46.593076760633721,37.710157476206234,47.213796630283753,72.390717674424906,36.287614074575984,51.838959117505212,34.55191649590266,54.884392470599785,38.126269260285653,33.256900304533701,42.682314598853203,50.463199532140379,43.470294897086674,52.790967679054248,62.056624005540669,44.763157754306221,60.419229828542811,61.234709455704682,43.505450078870005,51.720266743408779,40.510463153493291,35.12444656225771,33.497610183757246,49.122825947300704,54.755032652633332],\"y\":[177.2415255853553,165.27549490629804,179.50536922733912,167.86274478285097,173.7657491263532,174.3162762477543,171.16187423126223,173.71448665630817,176.79706268202779,169.22386540523595,175.31749687532894,172.0133919136309,170.12895314015589,173.4549743877748,169.96957737037391,168.49877165355321,178.01579596490387,170.86660380767367,169.51729852650917,172.36793261260587,168.11498777474199,176.93609570306896,172.98749410101971,170.41448795261584,169.72763306898761,174.46329277727418,175.02303518074604,169.21030555616679,171.79922659178408,177.19393372727308,170.5097079969494,174.63515661697937,170.34928674566206,167.7317661947524,173.4750525332596,169.77444895734902,170.33237509095667,174.28532177862644,173.66201768340642,174.24929569164306,172.52805573040104,171.68789031787472,178.0792140557229,171.44222066522468,169.85003824620938,170.36414946646138,168.96179985608993,170.97606410001254,171.80361210901887,172.14402694637943,178.57602504679468,177.69915343678645,169.0913319103467,176.8396675587737,175.46839387877191,171.31633290651183,168.08869181163396,173.36003524487995,173.44231794959228,182.08466737313017,180.09342129200289,178.45351937686672,172.36039557624161,176.70454102050871,174.46177161153895,175.48095368113309,173.76623519952324,178.08761385196999,176.50459529621276,170.22128431955747,171.24516922213863,169.50314276639924,173.52532161569229,161.76234007384414,167.04764064056329,165.79070586283416,162.91791438507607,165.99145053859991,174.13382377152953,162.45785498004369,167.48725692286251,161.89651956177423,168.47216905621804,163.05248753032504,161.47770325161756,164.52594099779733,167.04232769568731,164.78077873896368,167.79514242703067,170.79171345039114,165.19889864743132,170.26216996510286,170.52590116069109,164.79214814392981,167.44887106908394,163.82355069981,162.08167935471172,161.55555032728083,166.60884252169839,168.43033328458495],\"text\":[\"Sam Lu\",\"Lan Huang\",\"Yuji Nishida\",\"Elaine Liao\",\"K'Yeir\",\"Todd\",\"Grayson\",\"Sean\",\"John Jack\",\"Arnold\",\"Alexander\",\"Martin\",\"Caleb\",\"Fahd\",\"Richard\",\"Maisoon\",\"Wyatt\",\"Gabriel\",\"Arjun\",\"Iyaad\",\"Krishnan\",\"Shannon\",\"Mateaki\",\"Troy\",\"Justin\",\"Tommy\",\"Francisco\",\"Aditya\",\"German\",\"Shabaan\",\"Josiah\",\"Robert\",\"Daniel\",\"Nicholas\",\"Ubaida\",\"Joseph\",\"Malik\",\"Justin\",\"Ross\",\"Darius\",\"Jordan\",\"Jacob\",\"Allen\",\"Samuel\",\"Cristian\",\"Charles\",\"David\",\"Joshua\",\"Junaid\",\"Addison\",\"Tyler\",\"Muntasir\",\"Kyle\",\"Idrees\",\"Saurabh\",\"Michael\",\"Brett\",\"Stephen\",\"Jawaad\",\"Joseph\",\"Kaalim\",\"Shaheed\",\"Hyun Seok\",\"Jonathan\",\"Evan\",\"Wilbert\",\"Joseph\",\"Daniel\",\"Rifaah\",\"Badruddeen\",\"Blake\",\"Michael\",\"Manuella\",\"Eliza\",\"Katie\",\"Joan\",\"Hasana\",\"Queenisha\",\"Alyssa\",\"April\",\"Musu\",\"Sarah\",\"Hannah\",\"Alina\",\"Wajeeha\",\"Leslie\",\"Saaliha\",\"Tahaani\",\"Rainey\",\"Alyssa\",\"Hae\",\"Sabriyya\",\"Kathryn\",\"Hayley\",\"Rubi\",\"Alexandra\",\"Ana\",\"Shayonna\",\"Daisha\",\"Peggy\"],\"mode\":\"lines\",\"name\":\"Regression Fit\",\"type\":\"scatter\",\"marker\":{\"colorbar\":{\"title\":\"New_df$Age<br />New_df$Age\",\"ticklen\":2},\"cmin\":20,\"cmax\":40,\"colorscale\":[[\"0\",\"rgba(68,1,84,0.65)\"],[\"0.0416666666666666\",\"rgba(70,19,97,0.65)\"],[\"0.0833333333333334\",\"rgba(72,32,111,0.65)\"],[\"0.125\",\"rgba(71,45,122,0.65)\"],[\"0.166666666666667\",\"rgba(68,58,128,0.65)\"],[\"0.208333333333333\",\"rgba(64,70,135,0.65)\"],[\"0.25\",\"rgba(60,82,138,0.65)\"],[\"0.291666666666667\",\"rgba(56,93,140,0.65)\"],[\"0.333333333333333\",\"rgba(49,104,142,0.65)\"],[\"0.375\",\"rgba(46,114,142,0.65)\"],[\"0.416666666666667\",\"rgba(42,123,142,0.65)\"],[\"0.458333333333333\",\"rgba(38,133,141,0.65)\"],[\"0.5\",\"rgba(37,144,140,0.65)\"],[\"0.541666666666667\",\"rgba(33,154,138,0.65)\"],[\"0.583333333333333\",\"rgba(39,164,133,0.65)\"],[\"0.625\",\"rgba(47,174,127,0.65)\"],[\"0.666666666666667\",\"rgba(53,183,121,0.65)\"],[\"0.708333333333334\",\"rgba(79,191,110,0.65)\"],[\"0.75\",\"rgba(98,199,98,0.65)\"],[\"0.791666666666667\",\"rgba(119,207,85,0.65)\"],[\"0.833333333333334\",\"rgba(147,214,70,0.65)\"],[\"0.875\",\"rgba(172,220,52,0.65)\"],[\"0.916666666666667\",\"rgba(199,225,42,0.65)\"],[\"0.958333333333334\",\"rgba(226,228,40,0.65)\"],[\"1\",\"rgba(253,231,37,0.65)\"]],\"showscale\":false,\"color\":[28,21,24,27,24,24,23,21,27,36,32,27,22,26,27,40,25,28,34,40,35,25,21,30,32,34,40,24,36,34,40,35,25,32,34,27,33,30,35,36,21,26,28,32,31,31,37,28,22,26,31,27,20,27,40,37,33,34,40,22,37,34,37,30,24,30,35,31,38,37,25,39,34,37,34,21,24,25,33,31,35,27,21,38,25,38,21,29,31,24,28,31,22,39,33,37,33,37,27,22],\"line\":{\"colorbar\":{\"title\":\"\",\"ticklen\":2},\"cmin\":20,\"cmax\":40,\"colorscale\":[[\"0\",\"rgba(68,1,84,1)\"],[\"0.0416666666666666\",\"rgba(70,19,97,1)\"],[\"0.0833333333333334\",\"rgba(72,32,111,1)\"],[\"0.125\",\"rgba(71,45,122,1)\"],[\"0.166666666666667\",\"rgba(68,58,128,1)\"],[\"0.208333333333333\",\"rgba(64,70,135,1)\"],[\"0.25\",\"rgba(60,82,138,1)\"],[\"0.291666666666667\",\"rgba(56,93,140,1)\"],[\"0.333333333333333\",\"rgba(49,104,142,1)\"],[\"0.375\",\"rgba(46,114,142,1)\"],[\"0.416666666666667\",\"rgba(42,123,142,1)\"],[\"0.458333333333333\",\"rgba(38,133,141,1)\"],[\"0.5\",\"rgba(37,144,140,1)\"],[\"0.541666666666667\",\"rgba(33,154,138,1)\"],[\"0.583333333333333\",\"rgba(39,164,133,1)\"],[\"0.625\",\"rgba(47,174,127,1)\"],[\"0.666666666666667\",\"rgba(53,183,121,1)\"],[\"0.708333333333334\",\"rgba(79,191,110,1)\"],[\"0.75\",\"rgba(98,199,98,1)\"],[\"0.791666666666667\",\"rgba(119,207,85,1)\"],[\"0.833333333333334\",\"rgba(147,214,70,1)\"],[\"0.875\",\"rgba(172,220,52,1)\"],[\"0.916666666666667\",\"rgba(199,225,42,1)\"],[\"0.958333333333334\",\"rgba(226,228,40,1)\"],[\"1\",\"rgba(253,231,37,1)\"]],\"showscale\":false,\"color\":[28,21,24,27,24,24,23,21,27,36,32,27,22,26,27,40,25,28,34,40,35,25,21,30,32,34,40,24,36,34,40,35,25,32,34,27,33,30,35,36,21,26,28,32,31,31,37,28,22,26,31,27,20,27,40,37,33,34,40,22,37,34,37,30,24,30,35,31,38,37,25,39,34,37,34,21,24,25,33,31,35,27,21,38,25,38,21,29,31,24,28,31,22,39,33,37,33,37,27,22]}},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[33.256900304533701,96.975412561936324],\"y\":[141.83340952961217,198.75933433179631],\"type\":\"scatter\",\"mode\":\"markers\",\"opacity\":0,\"hoverinfo\":\"none\",\"showlegend\":false,\"marker\":{\"colorbar\":{\"title\":\"New_df$Age<br />New_df$Age\",\"ticklen\":2,\"len\":0.5,\"lenmode\":\"fraction\",\"y\":1,\"yanchor\":\"top\"},\"cmin\":20,\"cmax\":40,\"colorscale\":[[\"0\",\"rgba(68,1,84,0.65)\"],[\"0.0416666666666666\",\"rgba(70,19,97,0.65)\"],[\"0.0833333333333334\",\"rgba(72,32,111,0.65)\"],[\"0.125\",\"rgba(71,45,122,0.65)\"],[\"0.166666666666667\",\"rgba(68,58,128,0.65)\"],[\"0.208333333333333\",\"rgba(64,70,135,0.65)\"],[\"0.25\",\"rgba(60,82,138,0.65)\"],[\"0.291666666666667\",\"rgba(56,93,140,0.65)\"],[\"0.333333333333333\",\"rgba(49,104,142,0.65)\"],[\"0.375\",\"rgba(46,114,142,0.65)\"],[\"0.416666666666667\",\"rgba(42,123,142,0.65)\"],[\"0.458333333333333\",\"rgba(38,133,141,0.65)\"],[\"0.5\",\"rgba(37,144,140,0.65)\"],[\"0.541666666666667\",\"rgba(33,154,138,0.65)\"],[\"0.583333333333333\",\"rgba(39,164,133,0.65)\"],[\"0.625\",\"rgba(47,174,127,0.65)\"],[\"0.666666666666667\",\"rgba(53,183,121,0.65)\"],[\"0.708333333333334\",\"rgba(79,191,110,0.65)\"],[\"0.75\",\"rgba(98,199,98,0.65)\"],[\"0.791666666666667\",\"rgba(119,207,85,0.65)\"],[\"0.833333333333334\",\"rgba(147,214,70,0.65)\"],[\"0.875\",\"rgba(172,220,52,0.65)\"],[\"0.916666666666667\",\"rgba(199,225,42,0.65)\"],[\"0.958333333333334\",\"rgba(226,228,40,0.65)\"],[\"1\",\"rgba(253,231,37,0.65)\"]],\"showscale\":true,\"color\":[20,40],\"line\":{\"color\":\"rgba(44,160,44,1)\"}},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n\n## **5.5 Statistical meaning**\n\n-   Model: $Y=X\\beta+\\varepsilon$, for $\\varepsilon\\sim N(0,1)$\n\n-   Estimate $\\beta_0$, $\\beta_1$\n\n$$\nY = \\begin{pmatrix}\nY_1\\\\\n\\vdots\\\\\nY_n\n\\end{pmatrix}\n,\\;\nX = \\begin{pmatrix}\n1 & X_1\\\\\n\\vdots & \\vdots\\\\\n1 & X_n\n\\end{pmatrix}\n,\\;\\text{and }\\;\n\\beta = \\begin{pmatrix}\n\\beta_0\\\\\n\\beta_1\n\\end{pmatrix}\n$$\n\n-   $\\hat{\\beta} = \\begin{pmatrix} \\hat{\\beta_0}\\\\ \\hat{\\beta_1} \\end{pmatrix}$ is LSE of $\\beta$\n\n------------------------------------------------------------------------\n\n### **5.5.1 LSE**\n\n-   LSE (Least Squared Estimation) to estimate $\\beta$\n\n-   Estimation of $Y$: $\\hat{Y}=X\\hat{\\beta}$\n\n-   Minimized:\n\n$$\n(Y-X\\hat{\\beta})^T(Y-X\\hat{\\beta})\n$$\n\n-   Solve: (maximum and minimum for the function while the derivative equal to 0.)\n\n$$\n\\cfrac{\\partial}{\\partial\\hat{\\beta}} (Y-X\\hat{\\beta})^T(Y-X\\hat{\\beta})=0\n$$\n\n-   We have:\n\n$$\n\\hat{\\beta} = (X^TX)^{-1}X^TY\n$$\n\n------------------------------------------------------------------------\n\n# **6 QA**\n\n------------------------------------------------------------------------\n\n## **6.1 ERROR**\n\n------------------------------------------------------------------------\n\n### 6.1.1 error: can not find the object 'x'\n\nHere's the problem for undefined variable 'x'.\n\n------------------------------------------------------------------------\n\n### 6.6.2 error: the function 'f' not found.\n\nCheck the function exists or the package with this function should be installed. Please use `?f` to find the function detail. If you use the function `f` in package called `Basic`, then install the package and run the code `library(\"Basic\")`. You then use the function.\n\n------------------------------------------------------------------------\n\n### 6.6.3 wrong data type\n\nSometimes, the package require numeric only, you could use `as.numeric()` to change its type and utilize `class()` to check its type.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nc1 <- c(1,2,5,7,\"1\",\"6\")\n\n# turn into numeric\nc1 <- as.numeric(c1)\n\n#check\nclass(c1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n``` code-output\n[1] \"numeric\"\n```\n\n\n:::\n:::\n\n\n------------------------------------------------------------------------\n",
    "supporting": [
      "Rtutorial_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}