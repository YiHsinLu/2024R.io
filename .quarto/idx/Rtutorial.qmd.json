{"title":"**Basic Statistical Analysis with R**","markdown":{"yaml":{"title":"**Basic Statistical Analysis with R**","author":"Yi-Hsin Lu","output":{"html_document":{"toc":true,"toc_float":true,"df_print":"paged"}}},"headingText":"**WHY?**","containsRefs":false,"markdown":"\n\n------------------------------------------------------------------------\n\nIn this tutorial, we start with simple R code, and we then introduce basic statistics and probabilities. Utilizing R code and packages to learn statistics methods is the core of this webpage. (here's the [presentation](https://yihsinlu.github.io/2024R.io/presentation/RStat_tutorial.html))\n\n-   R\n\n-   Probability and Statistics\n\n-   Data with R\n\n-   Statistics with R\n\n-   Model with R\n\n------------------------------------------------------------------------\n\n\nWhy is it important to learn **statistics**, and why do we use **R** for data analysis? In the current era characterized by big data, extensive information, and artificial intelligence (AI), statistical models form the cornerstone of AI and machine learning. Statistics provide a comprehensive framework for explaining outcomes, parameters, and nearly all aspects of these models. By utilizing R, a powerful statistical computing language, researchers can efficiently analyze and interpret complex datasets, thereby advancing the field of data science.\n\n------------------------------------------------------------------------\n\n# **1 R**\n\nJ.D. Long, P. Teetor ([2019](https://rc2e.com/)) present a R cookbook by bookdown. Start with [install R](https://cran.r-project.org/bin/windows/base/) and its compiler [R studio](https://posit.co/downloads/).\n\n## **1.1 Get Start**\n\nThe R studio page display 4 windows unless nav-bar, The upper left window is the opening file, I prefer utilize `.Rmd` (R mark down). As Fig 1., we code between the area and see the result below. You also could type the code behide `>` on lower left window, and click enter to run the code. Two right windows illustrate the variable, function, and packages, we will introduce how they work later.\n\n![**Fig 1.**](fig/Rstudio_start.jpg)\n\n## **1.2 Variables**\n\nFor the problem of using `<-` or `=`, we will see the same result for setting variables but my suggestion is `<-`.\n\n```{r}\nx <- 100\nx = 100\nx\n```\n\n### **1.2.1 integer**\n\n```{r}\nint <- 10\nint\n```\n\n### **1.2.2 character**\n\n```{r}\nchr <- \"I am a character\"\nchr\n```\n\n### **1.2.3 vector**\n\n-   Be careful the variable name, such as `c` is a function fro creating vectors.\n\n```{r}\nV1 <- c(1:10)\nV2 <- c(\"2\", 2)\nV1\nV2\n```\n\n### **1.2.4 function**\n\n$$\nf(x)=x^2+2x+1\\text{, and find } f(\\pi).\n$$\n\n```{r}\nf <- function(x){\n  x^2+2*x+1\n}\nf(pi)\n```\n\nUsing `?function_name` to see detail in th function.\n\n### **1.2.5 factor**\n\n```{r}\nF1 <- factor(c(1,0,1,1,0,1))\nF1\n```\n\n### **1.2.6 list**\n\n```{r}\nList1 <- list(integer1 = int,\n              character1 = chr,\n              vector1 = V1,\n              function1 = f,\n              factor1 = F1)\nList1\n```\n\n### **1.2.7 matrix**\n\n```{r}\nM1 <- matrix(c(1,2,1,\n               0,2,7), ncol = 3, nrow = 2, byrow = T)\nM1\n```\n\n```{r}\nM2 <- matrix(c(1,0,0,\n               0,1,0,\n               0,0,1), ncol = 3, nrow = 3, byrow = T)\nM2\n```\n\n```{r}\nM1%*%M2\n```\n\n### **1.2.8 data frame**\n\n```{r}\ndf <- data.frame(Name = c(\"Sam\", \"Yuji\", \"Lan\", \"Elaine\"),\n                 Age = c(28,24,NA,NA),\n                 Height = c(177, 187, 159, 164),\n                 Gender = factor(c(\"M\", \"M\", \"F\", \"F\")))\ndf\n```\n\n------------------------------------------------------------------------\n\n# **2 Probabilities and Statistics**\n\n-   [Textbook](https://cis.temple.edu/~latecki/Courses/CIS2033-Spring13/Modern_intro_probability_statistics_Dekking05.pdf)\n\n------------------------------------------------------------------------\n\n## **2.1 Probability Space**\n\n$$\n\\Large (\\Omega, \\mathscr{F}, P)\n$$\n\n-   $\\Omega$: Sample space, all of the occurring events.\n\n-   $\\mathscr{F}$: $\\sigma$-algebra, hard to explained, simply define $\\Omega\\in\\mathscr{F}$, fixed the math.\n\n-   $P$: probability measure, the value of the occurring event, and between 0 and 1.\n\n------------------------------------------------------------------------\n\n### **2.1.1 simply example**\n\nProbability space of tossing a fair coin, then:\n\n-   $\\Omega = \\{H,T\\}$\n\n-   $\\mathscr{F} = \\{H,T\\}$\n\n-   $P(\\{H\\})=P(\\{T\\})=\\frac{1}{2}$\n\n------------------------------------------------------------------------\n\n### **2.1.2 Probability Measure**\n\n-   **Three Axiom**\n\n    -   $0\\leq P(A)\\leq 1,\\;\\forall A$\n\n    -   $P(\\Omega) = 1$\n\n    -   $P(\\bigcup_{i=1}^n A_i)=\\sum_{i=1}^n P(A_i), \\text{where }A_i\\cap A_j=\\varnothing,\\;\\forall i,j$\n\n## **2.2 Discrete Random Variable**\n\n-   Use X,Y,Z,... define random variables, and x,y,z,.. define values.\n\n-   Random Variables $X$ includes all possible outcomes.\n\n-   Probability is denoted by $P(X=x)=f(x)$.\n\n-   Mean: $E(X) = \\sum_{x=1}^nx_if(x) = \\mu$\n\n-   variance:$Var(X) = \\sum_{x=1}^n(x-\\mu)^2f(x)= E(X-E(X))^2=E(X^2)-(E(X))^2$\n\n------------------------------------------------------------------------\n\n### **2.2.1 Binomial**\n\n$$\n\\Large X\\sim B(n,p)\n$$\n\n-   $n$ and $p$ are parameters of distribution\n\n-   $n$: n times for trail\n\n-   $p$: probability of event for each trail\n\n-   Probability Mass Function (pmf):\n\n$$\nf_X(x) = \\binom{n}{x}\\;p^xq^{n-x},\\;\\forall x = 1, \\cdots, n\n$$\n\n------------------------------------------------------------------------\n\n## **2.3 Continuous Random Variable**\n\n-   Probability is denoted by $P(X\\leq x)=\\int_{-\\infty}^xf(x)dx$, then $P(X=x)=0$\n\n-   Mean: $E(X) = \\int_\\mathbb{R}xf_X(x)dx = \\mu$\n\n-   variance:$Var(X) = \\int_\\mathbb{R}(x-\\mu)^2f_X(x)dx = E(X-E(X))^2=E(X^2)-(E(X))^2$\n\n------------------------------------------------------------------------\n\n### **2.3.1 Exponential**\n\n-   $X\\sim\\exp(\\lambda)$\n\n-   Probability Density Function (pdf.) $f_X(x) = \\lambda e^{-\\lambda x}$\n\n```{r}\nf <- function(x, lambda = 1){lambda*exp(-lambda*x)}\ncurve(f,from = 0, to = 5, col = 1)\ncurve(f(x,2),from = 0, to = 5, col = 2, add = TRUE)\ncurve(f(x,.5),from = 0, to = 5, col = 3, add = TRUE)\n```\n\n------------------------------------------------------------------------\n\n### **2.3.2 Normal**\n\n$$\n\\Large X\\sim N(\\mu, \\sigma^2)\n$$\n\n$$\nf_X(x) = \\cfrac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}},\\;\\forall\\;x\\in\\mathbb{R}\n$$\n\n------------------------------------------------------------------------\n\n### **2.3.3 t-distribution**\n\n-   $X\\sim t_n$\n\n-   $t_n\\overset{d}{=}\\color{red}{N(0,1)}\\;$ as $\\;n\\rightarrow\\infty$\n\n```{r}\ncurve(dt(x,df=1),from=-4,to=4,col=\"#000000\",ylim=c(0,0.4))\ncurve(dt(x,df=2),from=-4,to=4,col=\"#240000\",add=T)\ncurve(dt(x,df=3),from=-4,to=4,col=\"#460000\",add=T)\ncurve(dt(x,df=4),from=-4,to=4,col=\"#690000\",add=T)\ncurve(dt(x,df=5),from=-4,to=4,col=\"#800000\",add=T)\ncurve(dt(x,df=8),from=-4,to=4,col=\"#990000\",add=T)\ncurve(dt(x,df=10),from=-4,to=4,col=\"#bb0000\",add=T)\ncurve(dt(x,df=50),from=-4,to=4,col=\"#cc0000\",add=T)\ncurve(dt(x,df=91),from=-4,to=4,col=\"#dd0000\",add=T)\ncurve(dt(x,df=100),from=-4,to=4,col=\"#ee0000\",add=T)\ncurve(dnorm(x,0,1),from=-4,to=4,col=\"#ff0000\",add=T)\n```\n\n------------------------------------------------------------------------\n\n# **3 Data with R**\n\n------------------------------------------------------------------------\n\n## **3.1 Random Sample**\n\n$$\n\\mathcal{X}=(X_1, X_2,\\cdots, X_{100}),\\;\\forall\\;X_i\\overset{iid}{\\sim} N(160,10)\n$$\n\n```{r echo=TRUE}\nset.seed(19970608)#random\nx <- rnorm(n = 100, mean = 160, sd = sqrt(10))\nsort(x, decreasing = FALSE)\n```\n\n------------------------------------------------------------------------\n\n## **3.2 Histogram**\n\n```{r echo=TRUE}\nhist(x, nclass = 20)\n```\n\n------------------------------------------------------------------------\n\n## **3.3 Data table**\n\n```{r echo=TRUE}\nlibrary(kableExtra)\ndf <- read.csv(file = \"csv/df.csv\", fileEncoding = \"Big5\")\nkable(df)\n```\n\n------------------------------------------------------------------------\n\n## **3.4 New Data (Male)**\n\n```{r echo=TRUE}\nlibrary(randomNames)\nset.seed(19970608)\nNew_df.M <- data.frame(Name = randomNames(n = 68, gender = 0, which.names = \"first\"),\n                       Height = rnorm(68, 175, 10),\n                       Weight = rnorm(68, 70, 10),\n                       Gender = rep(\"M\", 68),\n                       Age = sample(20:40, size = 68, replace = TRUE))\nNew_df.M\n```\n\n------------------------------------------------------------------------\n\n## **3.5 New Data (Female)**\n\n```{r echo=TRUE}\nlibrary(randomNames)\nset.seed(19970607)\nNew_df.F <- data.frame(Name = randomNames(n = 28, gender = 1, which.names = \"first\"),\n                       Height = rnorm(28, 160, 10),\n                       Weight = rnorm(28, 50, 10),\n                       Gender = rep(\"F\", 28),\n                       Age = sample(20:40, size = 28, replace = TRUE))\nNew_df.F\n```\n\n------------------------------------------------------------------------\n\n## **3.6 New Data (n = 100)**\n\n```{r echo=TRUE}\nNew_df <- rbind(df, New_df.M, New_df.F) #cbind()\nNew_df\n```\n\n------------------------------------------------------------------------\n\n## **3.7 Data editing**\n\n```{r echo=TRUE}\nlibrary(dplyr)\nNew_df <- New_df%>%\n  mutate(BMI = Weight/(Height/100)^2)%>%\n  transform(Gender = as.factor(Gender),\n            BMI = round(BMI, digits = 1))\nNew_df\n```\n\n------------------------------------------------------------------------\n\n## **3.8 Data Information**\n\n```{r echo=TRUE}\nsummary(New_df)\n```\n\n------------------------------------------------------------------------\n\n## **3.9 Data searching**\n\n```{r echo=TRUE}\nNew_df%>%filter(BMI<13)\n```\n\n```{r echo=TRUE}\nNew_df%>%filter(Height>190)\n```\n\n```{r echo=TRUE}\nNew_df%>%filter(Age==28)\n```\n\n------------------------------------------------------------------------\n\n# **4 Statistics with R**\n\n------------------------------------------------------------------------\n\n## **4.1 One-sample Student's t Test**\n\n$$\nH_0: \\mu=170\n$$ $$\nH_1: \\mu\\neq 170\n$$\n\n```{r echo=TRUE}\nt.test(New_df$Height, mu=170)\n```\n\n------------------------------------------------------------------------\n\n## **4.2 One-sample Student's t Test**\n\n$$\nH_0: \\mu>170\n$$ $$\nH_1: \\mu\\leq 170\n$$\n\n```{r echo=TRUE}\nt.test(New_df$Height, mu=170, alternative = \"greater\")\n#alternative = \"less\", when H_0:\\mu<170 \n```\n\n------------------------------------------------------------------------\n\n## **4.3 Two-sample Student's t Test**\n\n$$\nH_0: \\mu_1<\\mu_2\\;\\text{ vs }\\;H_1: \\mu_1\\geq\\mu_2\n$$\n\n```{r echo=TRUE}\nBMI_M <- New_df%>%filter(Gender==\"M\")\nBMI_M <- sample(BMI_M$BMI, 30, replace = F)\nBMI_F <- New_df%>%filter(Gender==\"F\")\nBMI_F <- BMI_F$BMI\n# test\nt.test(BMI_M, BMI_F, alternative = \"less\")\n```\n\n------------------------------------------------------------------------\n\n# **5 Model with R**\n\n------------------------------------------------------------------------\n\n## **5.1 Linear Model**\n\n$$\nY = \\beta_0+\\beta_1X+\\varepsilon\\;,\\;\\text{where }\\;\\varepsilon\\sim N(0,1)\n$$\n\n```{r echo=TRUE}\nglm1 <- glm(Height~Weight, data = New_df)\nsummary(glm1)\n```\n\n------------------------------------------------------------------------\n\n## **5.2 Regression Plot**\n\n```{r warning=FALSE, message=FALSE}\nlibrary(plotly)\n\nest_beta <- glm1$coefficients\nNew_est <- data.frame(Height = est_beta[1]+est_beta[2]*New_df$Weight,\n                      Weight = New_df$Weight)\n\nplot_ly(New_df,\n        x = ~Weight,\n        y = ~Height,\n        text = New_df$Name,\n        type = 'scatter',\n        alpha = 0.65,\n        mode = 'markers',\n        name = 'Weight-Height')%>% \n  add_trace(data = New_est,\n            x = ~Weight,\n            y = ~Height,\n            name = 'Regression Fit',\n            mode = 'lines')\n```\n\n------------------------------------------------------------------------\n\n## **5.3 Regression Plot (Gender)**\n\n```{r warning=FALSE, message=FALSE}\nlibrary(plotly)\n\nest_beta <- glm1$coefficients\nNew_est <- data.frame(Height = est_beta[1]+est_beta[2]*New_df$Weight,\n                      Weight = New_df$Weight)\n\nplot_ly(New_df,\n        x = ~Weight,\n        y = ~Height,\n        text = New_df$Name,\n        color = ~New_df$Gender,\n        type = 'scatter',\n        alpha = 0.65,\n        mode = 'markers',\n        name = 'Weight-Height')%>% \n  add_trace(data = New_est,\n            x = ~Weight,\n            y = ~Height,\n            name = 'Regression Fit',\n            mode = 'lines')\n```\n\n------------------------------------------------------------------------\n\n## **5.4 Regression Plot (Age)**\n\n```{r echo=FALSE, warning=FALSE, message=FALSE}\nlibrary(plotly)\n\nest_beta <- glm1$coefficients\nNew_est <- data.frame(Height = est_beta[1]+est_beta[2]*New_df$Weight,\n                      Weight = New_df$Weight)\n\nplot_ly(New_df,\n        x = ~Weight,\n        y = ~Height,\n        text = New_df$Name,\n        color = ~New_df$Age,\n        type = 'scatter',\n        alpha = 0.65,\n        mode = 'markers',\n        name = 'Weight-Height')%>% \n  add_trace(data = New_est,\n            x = ~Weight,\n            y = ~Height,\n            name = 'Regression Fit',\n            mode = 'lines')\n```\n\n------------------------------------------------------------------------\n\n## **5.5 Statistical meaning**\n\n-   Model: $Y=X\\beta+\\varepsilon$, for $\\varepsilon\\sim N(0,1)$\n\n-   Estimate $\\beta_0$, $\\beta_1$\n\n$$\nY = \\begin{pmatrix}\nY_1\\\\\n\\vdots\\\\\nY_n\n\\end{pmatrix}\n,\\;\nX = \\begin{pmatrix}\n1 & X_1\\\\\n\\vdots & \\vdots\\\\\n1 & X_n\n\\end{pmatrix}\n,\\;\\text{and }\\;\n\\beta = \\begin{pmatrix}\n\\beta_0\\\\\n\\beta_1\n\\end{pmatrix}\n$$\n\n-   $\\hat{\\beta} = \\begin{pmatrix} \\hat{\\beta_0}\\\\ \\hat{\\beta_1} \\end{pmatrix}$ is LSE of $\\beta$\n\n### **5.5.1 LSE**\n\n-   LSE (Least Squared Estimation)\n\n-   Estimation of $Y$: $\\hat{Y}=X\\hat{\\beta}$\n\n-   Solve $\\hat{\\beta}$ from $Y-X\\hat{\\beta}=0$\n\n-   We have:\n\n$$\n\\hat{\\beta} = (X^TX)^{-1}X^TY\n$$\n","srcMarkdownNoYaml":"\n\n------------------------------------------------------------------------\n\nIn this tutorial, we start with simple R code, and we then introduce basic statistics and probabilities. Utilizing R code and packages to learn statistics methods is the core of this webpage. (here's the [presentation](https://yihsinlu.github.io/2024R.io/presentation/RStat_tutorial.html))\n\n-   R\n\n-   Probability and Statistics\n\n-   Data with R\n\n-   Statistics with R\n\n-   Model with R\n\n------------------------------------------------------------------------\n\n### **WHY?**\n\nWhy is it important to learn **statistics**, and why do we use **R** for data analysis? In the current era characterized by big data, extensive information, and artificial intelligence (AI), statistical models form the cornerstone of AI and machine learning. Statistics provide a comprehensive framework for explaining outcomes, parameters, and nearly all aspects of these models. By utilizing R, a powerful statistical computing language, researchers can efficiently analyze and interpret complex datasets, thereby advancing the field of data science.\n\n------------------------------------------------------------------------\n\n# **1 R**\n\nJ.D. Long, P. Teetor ([2019](https://rc2e.com/)) present a R cookbook by bookdown. Start with [install R](https://cran.r-project.org/bin/windows/base/) and its compiler [R studio](https://posit.co/downloads/).\n\n## **1.1 Get Start**\n\nThe R studio page display 4 windows unless nav-bar, The upper left window is the opening file, I prefer utilize `.Rmd` (R mark down). As Fig 1., we code between the area and see the result below. You also could type the code behide `>` on lower left window, and click enter to run the code. Two right windows illustrate the variable, function, and packages, we will introduce how they work later.\n\n![**Fig 1.**](fig/Rstudio_start.jpg)\n\n## **1.2 Variables**\n\nFor the problem of using `<-` or `=`, we will see the same result for setting variables but my suggestion is `<-`.\n\n```{r}\nx <- 100\nx = 100\nx\n```\n\n### **1.2.1 integer**\n\n```{r}\nint <- 10\nint\n```\n\n### **1.2.2 character**\n\n```{r}\nchr <- \"I am a character\"\nchr\n```\n\n### **1.2.3 vector**\n\n-   Be careful the variable name, such as `c` is a function fro creating vectors.\n\n```{r}\nV1 <- c(1:10)\nV2 <- c(\"2\", 2)\nV1\nV2\n```\n\n### **1.2.4 function**\n\n$$\nf(x)=x^2+2x+1\\text{, and find } f(\\pi).\n$$\n\n```{r}\nf <- function(x){\n  x^2+2*x+1\n}\nf(pi)\n```\n\nUsing `?function_name` to see detail in th function.\n\n### **1.2.5 factor**\n\n```{r}\nF1 <- factor(c(1,0,1,1,0,1))\nF1\n```\n\n### **1.2.6 list**\n\n```{r}\nList1 <- list(integer1 = int,\n              character1 = chr,\n              vector1 = V1,\n              function1 = f,\n              factor1 = F1)\nList1\n```\n\n### **1.2.7 matrix**\n\n```{r}\nM1 <- matrix(c(1,2,1,\n               0,2,7), ncol = 3, nrow = 2, byrow = T)\nM1\n```\n\n```{r}\nM2 <- matrix(c(1,0,0,\n               0,1,0,\n               0,0,1), ncol = 3, nrow = 3, byrow = T)\nM2\n```\n\n```{r}\nM1%*%M2\n```\n\n### **1.2.8 data frame**\n\n```{r}\ndf <- data.frame(Name = c(\"Sam\", \"Yuji\", \"Lan\", \"Elaine\"),\n                 Age = c(28,24,NA,NA),\n                 Height = c(177, 187, 159, 164),\n                 Gender = factor(c(\"M\", \"M\", \"F\", \"F\")))\ndf\n```\n\n------------------------------------------------------------------------\n\n# **2 Probabilities and Statistics**\n\n-   [Textbook](https://cis.temple.edu/~latecki/Courses/CIS2033-Spring13/Modern_intro_probability_statistics_Dekking05.pdf)\n\n------------------------------------------------------------------------\n\n## **2.1 Probability Space**\n\n$$\n\\Large (\\Omega, \\mathscr{F}, P)\n$$\n\n-   $\\Omega$: Sample space, all of the occurring events.\n\n-   $\\mathscr{F}$: $\\sigma$-algebra, hard to explained, simply define $\\Omega\\in\\mathscr{F}$, fixed the math.\n\n-   $P$: probability measure, the value of the occurring event, and between 0 and 1.\n\n------------------------------------------------------------------------\n\n### **2.1.1 simply example**\n\nProbability space of tossing a fair coin, then:\n\n-   $\\Omega = \\{H,T\\}$\n\n-   $\\mathscr{F} = \\{H,T\\}$\n\n-   $P(\\{H\\})=P(\\{T\\})=\\frac{1}{2}$\n\n------------------------------------------------------------------------\n\n### **2.1.2 Probability Measure**\n\n-   **Three Axiom**\n\n    -   $0\\leq P(A)\\leq 1,\\;\\forall A$\n\n    -   $P(\\Omega) = 1$\n\n    -   $P(\\bigcup_{i=1}^n A_i)=\\sum_{i=1}^n P(A_i), \\text{where }A_i\\cap A_j=\\varnothing,\\;\\forall i,j$\n\n## **2.2 Discrete Random Variable**\n\n-   Use X,Y,Z,... define random variables, and x,y,z,.. define values.\n\n-   Random Variables $X$ includes all possible outcomes.\n\n-   Probability is denoted by $P(X=x)=f(x)$.\n\n-   Mean: $E(X) = \\sum_{x=1}^nx_if(x) = \\mu$\n\n-   variance:$Var(X) = \\sum_{x=1}^n(x-\\mu)^2f(x)= E(X-E(X))^2=E(X^2)-(E(X))^2$\n\n------------------------------------------------------------------------\n\n### **2.2.1 Binomial**\n\n$$\n\\Large X\\sim B(n,p)\n$$\n\n-   $n$ and $p$ are parameters of distribution\n\n-   $n$: n times for trail\n\n-   $p$: probability of event for each trail\n\n-   Probability Mass Function (pmf):\n\n$$\nf_X(x) = \\binom{n}{x}\\;p^xq^{n-x},\\;\\forall x = 1, \\cdots, n\n$$\n\n------------------------------------------------------------------------\n\n## **2.3 Continuous Random Variable**\n\n-   Probability is denoted by $P(X\\leq x)=\\int_{-\\infty}^xf(x)dx$, then $P(X=x)=0$\n\n-   Mean: $E(X) = \\int_\\mathbb{R}xf_X(x)dx = \\mu$\n\n-   variance:$Var(X) = \\int_\\mathbb{R}(x-\\mu)^2f_X(x)dx = E(X-E(X))^2=E(X^2)-(E(X))^2$\n\n------------------------------------------------------------------------\n\n### **2.3.1 Exponential**\n\n-   $X\\sim\\exp(\\lambda)$\n\n-   Probability Density Function (pdf.) $f_X(x) = \\lambda e^{-\\lambda x}$\n\n```{r}\nf <- function(x, lambda = 1){lambda*exp(-lambda*x)}\ncurve(f,from = 0, to = 5, col = 1)\ncurve(f(x,2),from = 0, to = 5, col = 2, add = TRUE)\ncurve(f(x,.5),from = 0, to = 5, col = 3, add = TRUE)\n```\n\n------------------------------------------------------------------------\n\n### **2.3.2 Normal**\n\n$$\n\\Large X\\sim N(\\mu, \\sigma^2)\n$$\n\n$$\nf_X(x) = \\cfrac{1}{\\sqrt{2\\pi}\\sigma}e^{-\\frac{(x-\\mu)^2}{2\\sigma^2}},\\;\\forall\\;x\\in\\mathbb{R}\n$$\n\n------------------------------------------------------------------------\n\n### **2.3.3 t-distribution**\n\n-   $X\\sim t_n$\n\n-   $t_n\\overset{d}{=}\\color{red}{N(0,1)}\\;$ as $\\;n\\rightarrow\\infty$\n\n```{r}\ncurve(dt(x,df=1),from=-4,to=4,col=\"#000000\",ylim=c(0,0.4))\ncurve(dt(x,df=2),from=-4,to=4,col=\"#240000\",add=T)\ncurve(dt(x,df=3),from=-4,to=4,col=\"#460000\",add=T)\ncurve(dt(x,df=4),from=-4,to=4,col=\"#690000\",add=T)\ncurve(dt(x,df=5),from=-4,to=4,col=\"#800000\",add=T)\ncurve(dt(x,df=8),from=-4,to=4,col=\"#990000\",add=T)\ncurve(dt(x,df=10),from=-4,to=4,col=\"#bb0000\",add=T)\ncurve(dt(x,df=50),from=-4,to=4,col=\"#cc0000\",add=T)\ncurve(dt(x,df=91),from=-4,to=4,col=\"#dd0000\",add=T)\ncurve(dt(x,df=100),from=-4,to=4,col=\"#ee0000\",add=T)\ncurve(dnorm(x,0,1),from=-4,to=4,col=\"#ff0000\",add=T)\n```\n\n------------------------------------------------------------------------\n\n# **3 Data with R**\n\n------------------------------------------------------------------------\n\n## **3.1 Random Sample**\n\n$$\n\\mathcal{X}=(X_1, X_2,\\cdots, X_{100}),\\;\\forall\\;X_i\\overset{iid}{\\sim} N(160,10)\n$$\n\n```{r echo=TRUE}\nset.seed(19970608)#random\nx <- rnorm(n = 100, mean = 160, sd = sqrt(10))\nsort(x, decreasing = FALSE)\n```\n\n------------------------------------------------------------------------\n\n## **3.2 Histogram**\n\n```{r echo=TRUE}\nhist(x, nclass = 20)\n```\n\n------------------------------------------------------------------------\n\n## **3.3 Data table**\n\n```{r echo=TRUE}\nlibrary(kableExtra)\ndf <- read.csv(file = \"csv/df.csv\", fileEncoding = \"Big5\")\nkable(df)\n```\n\n------------------------------------------------------------------------\n\n## **3.4 New Data (Male)**\n\n```{r echo=TRUE}\nlibrary(randomNames)\nset.seed(19970608)\nNew_df.M <- data.frame(Name = randomNames(n = 68, gender = 0, which.names = \"first\"),\n                       Height = rnorm(68, 175, 10),\n                       Weight = rnorm(68, 70, 10),\n                       Gender = rep(\"M\", 68),\n                       Age = sample(20:40, size = 68, replace = TRUE))\nNew_df.M\n```\n\n------------------------------------------------------------------------\n\n## **3.5 New Data (Female)**\n\n```{r echo=TRUE}\nlibrary(randomNames)\nset.seed(19970607)\nNew_df.F <- data.frame(Name = randomNames(n = 28, gender = 1, which.names = \"first\"),\n                       Height = rnorm(28, 160, 10),\n                       Weight = rnorm(28, 50, 10),\n                       Gender = rep(\"F\", 28),\n                       Age = sample(20:40, size = 28, replace = TRUE))\nNew_df.F\n```\n\n------------------------------------------------------------------------\n\n## **3.6 New Data (n = 100)**\n\n```{r echo=TRUE}\nNew_df <- rbind(df, New_df.M, New_df.F) #cbind()\nNew_df\n```\n\n------------------------------------------------------------------------\n\n## **3.7 Data editing**\n\n```{r echo=TRUE}\nlibrary(dplyr)\nNew_df <- New_df%>%\n  mutate(BMI = Weight/(Height/100)^2)%>%\n  transform(Gender = as.factor(Gender),\n            BMI = round(BMI, digits = 1))\nNew_df\n```\n\n------------------------------------------------------------------------\n\n## **3.8 Data Information**\n\n```{r echo=TRUE}\nsummary(New_df)\n```\n\n------------------------------------------------------------------------\n\n## **3.9 Data searching**\n\n```{r echo=TRUE}\nNew_df%>%filter(BMI<13)\n```\n\n```{r echo=TRUE}\nNew_df%>%filter(Height>190)\n```\n\n```{r echo=TRUE}\nNew_df%>%filter(Age==28)\n```\n\n------------------------------------------------------------------------\n\n# **4 Statistics with R**\n\n------------------------------------------------------------------------\n\n## **4.1 One-sample Student's t Test**\n\n$$\nH_0: \\mu=170\n$$ $$\nH_1: \\mu\\neq 170\n$$\n\n```{r echo=TRUE}\nt.test(New_df$Height, mu=170)\n```\n\n------------------------------------------------------------------------\n\n## **4.2 One-sample Student's t Test**\n\n$$\nH_0: \\mu>170\n$$ $$\nH_1: \\mu\\leq 170\n$$\n\n```{r echo=TRUE}\nt.test(New_df$Height, mu=170, alternative = \"greater\")\n#alternative = \"less\", when H_0:\\mu<170 \n```\n\n------------------------------------------------------------------------\n\n## **4.3 Two-sample Student's t Test**\n\n$$\nH_0: \\mu_1<\\mu_2\\;\\text{ vs }\\;H_1: \\mu_1\\geq\\mu_2\n$$\n\n```{r echo=TRUE}\nBMI_M <- New_df%>%filter(Gender==\"M\")\nBMI_M <- sample(BMI_M$BMI, 30, replace = F)\nBMI_F <- New_df%>%filter(Gender==\"F\")\nBMI_F <- BMI_F$BMI\n# test\nt.test(BMI_M, BMI_F, alternative = \"less\")\n```\n\n------------------------------------------------------------------------\n\n# **5 Model with R**\n\n------------------------------------------------------------------------\n\n## **5.1 Linear Model**\n\n$$\nY = \\beta_0+\\beta_1X+\\varepsilon\\;,\\;\\text{where }\\;\\varepsilon\\sim N(0,1)\n$$\n\n```{r echo=TRUE}\nglm1 <- glm(Height~Weight, data = New_df)\nsummary(glm1)\n```\n\n------------------------------------------------------------------------\n\n## **5.2 Regression Plot**\n\n```{r warning=FALSE, message=FALSE}\nlibrary(plotly)\n\nest_beta <- glm1$coefficients\nNew_est <- data.frame(Height = est_beta[1]+est_beta[2]*New_df$Weight,\n                      Weight = New_df$Weight)\n\nplot_ly(New_df,\n        x = ~Weight,\n        y = ~Height,\n        text = New_df$Name,\n        type = 'scatter',\n        alpha = 0.65,\n        mode = 'markers',\n        name = 'Weight-Height')%>% \n  add_trace(data = New_est,\n            x = ~Weight,\n            y = ~Height,\n            name = 'Regression Fit',\n            mode = 'lines')\n```\n\n------------------------------------------------------------------------\n\n## **5.3 Regression Plot (Gender)**\n\n```{r warning=FALSE, message=FALSE}\nlibrary(plotly)\n\nest_beta <- glm1$coefficients\nNew_est <- data.frame(Height = est_beta[1]+est_beta[2]*New_df$Weight,\n                      Weight = New_df$Weight)\n\nplot_ly(New_df,\n        x = ~Weight,\n        y = ~Height,\n        text = New_df$Name,\n        color = ~New_df$Gender,\n        type = 'scatter',\n        alpha = 0.65,\n        mode = 'markers',\n        name = 'Weight-Height')%>% \n  add_trace(data = New_est,\n            x = ~Weight,\n            y = ~Height,\n            name = 'Regression Fit',\n            mode = 'lines')\n```\n\n------------------------------------------------------------------------\n\n## **5.4 Regression Plot (Age)**\n\n```{r echo=FALSE, warning=FALSE, message=FALSE}\nlibrary(plotly)\n\nest_beta <- glm1$coefficients\nNew_est <- data.frame(Height = est_beta[1]+est_beta[2]*New_df$Weight,\n                      Weight = New_df$Weight)\n\nplot_ly(New_df,\n        x = ~Weight,\n        y = ~Height,\n        text = New_df$Name,\n        color = ~New_df$Age,\n        type = 'scatter',\n        alpha = 0.65,\n        mode = 'markers',\n        name = 'Weight-Height')%>% \n  add_trace(data = New_est,\n            x = ~Weight,\n            y = ~Height,\n            name = 'Regression Fit',\n            mode = 'lines')\n```\n\n------------------------------------------------------------------------\n\n## **5.5 Statistical meaning**\n\n-   Model: $Y=X\\beta+\\varepsilon$, for $\\varepsilon\\sim N(0,1)$\n\n-   Estimate $\\beta_0$, $\\beta_1$\n\n$$\nY = \\begin{pmatrix}\nY_1\\\\\n\\vdots\\\\\nY_n\n\\end{pmatrix}\n,\\;\nX = \\begin{pmatrix}\n1 & X_1\\\\\n\\vdots & \\vdots\\\\\n1 & X_n\n\\end{pmatrix}\n,\\;\\text{and }\\;\n\\beta = \\begin{pmatrix}\n\\beta_0\\\\\n\\beta_1\n\\end{pmatrix}\n$$\n\n-   $\\hat{\\beta} = \\begin{pmatrix} \\hat{\\beta_0}\\\\ \\hat{\\beta_1} \\end{pmatrix}$ is LSE of $\\beta$\n\n### **5.5.1 LSE**\n\n-   LSE (Least Squared Estimation)\n\n-   Estimation of $Y$: $\\hat{Y}=X\\hat{\\beta}$\n\n-   Solve $\\hat{\\beta}$ from $Y-X\\hat{\\beta}=0$\n\n-   We have:\n\n$$\n\\hat{\\beta} = (X^TX)^{-1}X^TY\n$$\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":{"html_document":{"toc":true,"toc_float":true,"df_print":"paged"}},"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"Rtutorial.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.555","editor":"visual","theme":{"light":"mode_light.scss","dark":"mode_dark.scss"},"title":"**Basic Statistical Analysis with R**","author":"Yi-Hsin Lu"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}